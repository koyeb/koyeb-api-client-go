/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// checks if the GetOAuthOptionsReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOAuthOptionsReply{}

// GetOAuthOptionsReply A list of providers which you can use for single sign-on.
type GetOAuthOptionsReply struct {
	OauthProviders []OAuthProvider `json:"oauth_providers,omitempty"`
}

// NewGetOAuthOptionsReply instantiates a new GetOAuthOptionsReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOAuthOptionsReply() *GetOAuthOptionsReply {
	this := GetOAuthOptionsReply{}
	return &this
}

// NewGetOAuthOptionsReplyWithDefaults instantiates a new GetOAuthOptionsReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOAuthOptionsReplyWithDefaults() *GetOAuthOptionsReply {
	this := GetOAuthOptionsReply{}
	return &this
}

// GetOauthProviders returns the OauthProviders field value if set, zero value otherwise.
func (o *GetOAuthOptionsReply) GetOauthProviders() []OAuthProvider {
	if o == nil || IsNil(o.OauthProviders) {
		var ret []OAuthProvider
		return ret
	}
	return o.OauthProviders
}

// GetOauthProvidersOk returns a tuple with the OauthProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOAuthOptionsReply) GetOauthProvidersOk() ([]OAuthProvider, bool) {
	if o == nil || IsNil(o.OauthProviders) {
		return nil, false
	}
	return o.OauthProviders, true
}

// HasOauthProviders returns a boolean if a field has been set.
func (o *GetOAuthOptionsReply) HasOauthProviders() bool {
	if o != nil && !IsNil(o.OauthProviders) {
		return true
	}

	return false
}

// SetOauthProviders gets a reference to the given []OAuthProvider and assigns it to the OauthProviders field.
func (o *GetOAuthOptionsReply) SetOauthProviders(v []OAuthProvider) {
	o.OauthProviders = v
}

func (o GetOAuthOptionsReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOAuthOptionsReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OauthProviders) {
		toSerialize["oauth_providers"] = o.OauthProviders
	}
	return toSerialize, nil
}

type NullableGetOAuthOptionsReply struct {
	value *GetOAuthOptionsReply
	isSet bool
}

func (v NullableGetOAuthOptionsReply) Get() *GetOAuthOptionsReply {
	return v.value
}

func (v *NullableGetOAuthOptionsReply) Set(val *GetOAuthOptionsReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOAuthOptionsReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOAuthOptionsReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOAuthOptionsReply(val *GetOAuthOptionsReply) *NullableGetOAuthOptionsReply {
	return &NullableGetOAuthOptionsReply{value: val, isSet: true}
}

func (v NullableGetOAuthOptionsReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOAuthOptionsReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


