/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// UpsertSignupQualificationRequest struct for UpsertSignupQualificationRequest
type UpsertSignupQualificationRequest struct {
	Id *string `json:"id,omitempty"`
	SignupQualification *interface{} `json:"signup_qualification,omitempty"`
}

// NewUpsertSignupQualificationRequest instantiates a new UpsertSignupQualificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertSignupQualificationRequest() *UpsertSignupQualificationRequest {
	this := UpsertSignupQualificationRequest{}
	return &this
}

// NewUpsertSignupQualificationRequestWithDefaults instantiates a new UpsertSignupQualificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertSignupQualificationRequestWithDefaults() *UpsertSignupQualificationRequest {
	this := UpsertSignupQualificationRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *UpsertSignupQualificationRequest) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertSignupQualificationRequest) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *UpsertSignupQualificationRequest) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *UpsertSignupQualificationRequest) SetId(v string) {
	o.Id = &v
}

// GetSignupQualification returns the SignupQualification field value if set, zero value otherwise.
func (o *UpsertSignupQualificationRequest) GetSignupQualification() interface{} {
	if o == nil || o.SignupQualification == nil {
		var ret interface{}
		return ret
	}
	return *o.SignupQualification
}

// GetSignupQualificationOk returns a tuple with the SignupQualification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertSignupQualificationRequest) GetSignupQualificationOk() (*interface{}, bool) {
	if o == nil || o.SignupQualification == nil {
		return nil, false
	}
	return o.SignupQualification, true
}

// HasSignupQualification returns a boolean if a field has been set.
func (o *UpsertSignupQualificationRequest) HasSignupQualification() bool {
	if o != nil && o.SignupQualification != nil {
		return true
	}

	return false
}

// SetSignupQualification gets a reference to the given interface{} and assigns it to the SignupQualification field.
func (o *UpsertSignupQualificationRequest) SetSignupQualification(v interface{}) {
	o.SignupQualification = &v
}

func (o UpsertSignupQualificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.SignupQualification != nil {
		toSerialize["signup_qualification"] = o.SignupQualification
	}
	return json.Marshal(toSerialize)
}

type NullableUpsertSignupQualificationRequest struct {
	value *UpsertSignupQualificationRequest
	isSet bool
}

func (v NullableUpsertSignupQualificationRequest) Get() *UpsertSignupQualificationRequest {
	return v.value
}

func (v *NullableUpsertSignupQualificationRequest) Set(val *UpsertSignupQualificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertSignupQualificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertSignupQualificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertSignupQualificationRequest(val *UpsertSignupQualificationRequest) *NullableUpsertSignupQualificationRequest {
	return &NullableUpsertSignupQualificationRequest{value: val, isSet: true}
}

func (v NullableUpsertSignupQualificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpsertSignupQualificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


