/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GetIdenfyTokenReply struct for GetIdenfyTokenReply
type GetIdenfyTokenReply struct {
	AuthToken *string `json:"auth_token,omitempty"`
}

// NewGetIdenfyTokenReply instantiates a new GetIdenfyTokenReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIdenfyTokenReply() *GetIdenfyTokenReply {
	this := GetIdenfyTokenReply{}
	return &this
}

// NewGetIdenfyTokenReplyWithDefaults instantiates a new GetIdenfyTokenReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIdenfyTokenReplyWithDefaults() *GetIdenfyTokenReply {
	this := GetIdenfyTokenReply{}
	return &this
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *GetIdenfyTokenReply) GetAuthToken() string {
	if o == nil || isNil(o.AuthToken) {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIdenfyTokenReply) GetAuthTokenOk() (*string, bool) {
	if o == nil || isNil(o.AuthToken) {
    return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *GetIdenfyTokenReply) HasAuthToken() bool {
	if o != nil && !isNil(o.AuthToken) {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *GetIdenfyTokenReply) SetAuthToken(v string) {
	o.AuthToken = &v
}

func (o GetIdenfyTokenReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AuthToken) {
		toSerialize["auth_token"] = o.AuthToken
	}
	return json.Marshal(toSerialize)
}

type NullableGetIdenfyTokenReply struct {
	value *GetIdenfyTokenReply
	isSet bool
}

func (v NullableGetIdenfyTokenReply) Get() *GetIdenfyTokenReply {
	return v.value
}

func (v *NullableGetIdenfyTokenReply) Set(val *GetIdenfyTokenReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIdenfyTokenReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIdenfyTokenReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIdenfyTokenReply(val *GetIdenfyTokenReply) *NullableGetIdenfyTokenReply {
	return &NullableGetIdenfyTokenReply{value: val, isSet: true}
}

func (v NullableGetIdenfyTokenReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIdenfyTokenReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


