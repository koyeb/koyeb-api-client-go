/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// checks if the DiscourseAuthReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscourseAuthReply{}

// DiscourseAuthReply struct for DiscourseAuthReply
type DiscourseAuthReply struct {
	Sso *string `json:"sso,omitempty"`
	Sig *string `json:"sig,omitempty"`
}

// NewDiscourseAuthReply instantiates a new DiscourseAuthReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscourseAuthReply() *DiscourseAuthReply {
	this := DiscourseAuthReply{}
	return &this
}

// NewDiscourseAuthReplyWithDefaults instantiates a new DiscourseAuthReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscourseAuthReplyWithDefaults() *DiscourseAuthReply {
	this := DiscourseAuthReply{}
	return &this
}

// GetSso returns the Sso field value if set, zero value otherwise.
func (o *DiscourseAuthReply) GetSso() string {
	if o == nil || IsNil(o.Sso) {
		var ret string
		return ret
	}
	return *o.Sso
}

// GetSsoOk returns a tuple with the Sso field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscourseAuthReply) GetSsoOk() (*string, bool) {
	if o == nil || IsNil(o.Sso) {
		return nil, false
	}
	return o.Sso, true
}

// HasSso returns a boolean if a field has been set.
func (o *DiscourseAuthReply) HasSso() bool {
	if o != nil && !IsNil(o.Sso) {
		return true
	}

	return false
}

// SetSso gets a reference to the given string and assigns it to the Sso field.
func (o *DiscourseAuthReply) SetSso(v string) {
	o.Sso = &v
}

// GetSig returns the Sig field value if set, zero value otherwise.
func (o *DiscourseAuthReply) GetSig() string {
	if o == nil || IsNil(o.Sig) {
		var ret string
		return ret
	}
	return *o.Sig
}

// GetSigOk returns a tuple with the Sig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscourseAuthReply) GetSigOk() (*string, bool) {
	if o == nil || IsNil(o.Sig) {
		return nil, false
	}
	return o.Sig, true
}

// HasSig returns a boolean if a field has been set.
func (o *DiscourseAuthReply) HasSig() bool {
	if o != nil && !IsNil(o.Sig) {
		return true
	}

	return false
}

// SetSig gets a reference to the given string and assigns it to the Sig field.
func (o *DiscourseAuthReply) SetSig(v string) {
	o.Sig = &v
}

func (o DiscourseAuthReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscourseAuthReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Sso) {
		toSerialize["sso"] = o.Sso
	}
	if !IsNil(o.Sig) {
		toSerialize["sig"] = o.Sig
	}
	return toSerialize, nil
}

type NullableDiscourseAuthReply struct {
	value *DiscourseAuthReply
	isSet bool
}

func (v NullableDiscourseAuthReply) Get() *DiscourseAuthReply {
	return v.value
}

func (v *NullableDiscourseAuthReply) Set(val *DiscourseAuthReply) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscourseAuthReply) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscourseAuthReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscourseAuthReply(val *DiscourseAuthReply) *NullableDiscourseAuthReply {
	return &NullableDiscourseAuthReply{value: val, isSet: true}
}

func (v NullableDiscourseAuthReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscourseAuthReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


