/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// DatacenterListItem struct for DatacenterListItem
type DatacenterListItem struct {
	Id *string `json:"id,omitempty"`
	RegionId *string `json:"region_id,omitempty"`
	Domain *string `json:"domain,omitempty"`
	Coordinates []string `json:"coordinates,omitempty"`
	UseGpu *bool `json:"use_gpu,omitempty"`
	Regions []string `json:"regions,omitempty"`
}

// NewDatacenterListItem instantiates a new DatacenterListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDatacenterListItem() *DatacenterListItem {
	this := DatacenterListItem{}
	return &this
}

// NewDatacenterListItemWithDefaults instantiates a new DatacenterListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDatacenterListItemWithDefaults() *DatacenterListItem {
	this := DatacenterListItem{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DatacenterListItem) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterListItem) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DatacenterListItem) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DatacenterListItem) SetId(v string) {
	o.Id = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *DatacenterListItem) GetRegionId() string {
	if o == nil || isNil(o.RegionId) {
		var ret string
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterListItem) GetRegionIdOk() (*string, bool) {
	if o == nil || isNil(o.RegionId) {
    return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *DatacenterListItem) HasRegionId() bool {
	if o != nil && !isNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given string and assigns it to the RegionId field.
func (o *DatacenterListItem) SetRegionId(v string) {
	o.RegionId = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *DatacenterListItem) GetDomain() string {
	if o == nil || isNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterListItem) GetDomainOk() (*string, bool) {
	if o == nil || isNil(o.Domain) {
    return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *DatacenterListItem) HasDomain() bool {
	if o != nil && !isNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *DatacenterListItem) SetDomain(v string) {
	o.Domain = &v
}

// GetCoordinates returns the Coordinates field value if set, zero value otherwise.
func (o *DatacenterListItem) GetCoordinates() []string {
	if o == nil || isNil(o.Coordinates) {
		var ret []string
		return ret
	}
	return o.Coordinates
}

// GetCoordinatesOk returns a tuple with the Coordinates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterListItem) GetCoordinatesOk() ([]string, bool) {
	if o == nil || isNil(o.Coordinates) {
    return nil, false
	}
	return o.Coordinates, true
}

// HasCoordinates returns a boolean if a field has been set.
func (o *DatacenterListItem) HasCoordinates() bool {
	if o != nil && !isNil(o.Coordinates) {
		return true
	}

	return false
}

// SetCoordinates gets a reference to the given []string and assigns it to the Coordinates field.
func (o *DatacenterListItem) SetCoordinates(v []string) {
	o.Coordinates = v
}

// GetUseGpu returns the UseGpu field value if set, zero value otherwise.
func (o *DatacenterListItem) GetUseGpu() bool {
	if o == nil || isNil(o.UseGpu) {
		var ret bool
		return ret
	}
	return *o.UseGpu
}

// GetUseGpuOk returns a tuple with the UseGpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterListItem) GetUseGpuOk() (*bool, bool) {
	if o == nil || isNil(o.UseGpu) {
    return nil, false
	}
	return o.UseGpu, true
}

// HasUseGpu returns a boolean if a field has been set.
func (o *DatacenterListItem) HasUseGpu() bool {
	if o != nil && !isNil(o.UseGpu) {
		return true
	}

	return false
}

// SetUseGpu gets a reference to the given bool and assigns it to the UseGpu field.
func (o *DatacenterListItem) SetUseGpu(v bool) {
	o.UseGpu = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *DatacenterListItem) GetRegions() []string {
	if o == nil || isNil(o.Regions) {
		var ret []string
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DatacenterListItem) GetRegionsOk() ([]string, bool) {
	if o == nil || isNil(o.Regions) {
    return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *DatacenterListItem) HasRegions() bool {
	if o != nil && !isNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []string and assigns it to the Regions field.
func (o *DatacenterListItem) SetRegions(v []string) {
	o.Regions = v
}

func (o DatacenterListItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.RegionId) {
		toSerialize["region_id"] = o.RegionId
	}
	if !isNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	if !isNil(o.Coordinates) {
		toSerialize["coordinates"] = o.Coordinates
	}
	if !isNil(o.UseGpu) {
		toSerialize["use_gpu"] = o.UseGpu
	}
	if !isNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	return json.Marshal(toSerialize)
}

type NullableDatacenterListItem struct {
	value *DatacenterListItem
	isSet bool
}

func (v NullableDatacenterListItem) Get() *DatacenterListItem {
	return v.value
}

func (v *NullableDatacenterListItem) Set(val *DatacenterListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableDatacenterListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableDatacenterListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDatacenterListItem(val *DatacenterListItem) *NullableDatacenterListItem {
	return &NullableDatacenterListItem{value: val, isSet: true}
}

func (v NullableDatacenterListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDatacenterListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


