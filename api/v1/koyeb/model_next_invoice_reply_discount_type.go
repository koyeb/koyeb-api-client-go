/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
	"fmt"
)

// NextInvoiceReplyDiscountType the model 'NextInvoiceReplyDiscountType'
type NextInvoiceReplyDiscountType string

// List of NextInvoiceReply.Discount.Type
const (
	NEXTINVOICEREPLYDISCOUNTTYPE_PERCENT_OFF NextInvoiceReplyDiscountType = "PERCENT_OFF"
	NEXTINVOICEREPLYDISCOUNTTYPE_AMOUNT_OFF NextInvoiceReplyDiscountType = "AMOUNT_OFF"
)

// All allowed values of NextInvoiceReplyDiscountType enum
var AllowedNextInvoiceReplyDiscountTypeEnumValues = []NextInvoiceReplyDiscountType{
	"PERCENT_OFF",
	"AMOUNT_OFF",
}

func (v *NextInvoiceReplyDiscountType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NextInvoiceReplyDiscountType(value)
	for _, existing := range AllowedNextInvoiceReplyDiscountTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NextInvoiceReplyDiscountType", value)
}

// NewNextInvoiceReplyDiscountTypeFromValue returns a pointer to a valid NextInvoiceReplyDiscountType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNextInvoiceReplyDiscountTypeFromValue(v string) (*NextInvoiceReplyDiscountType, error) {
	ev := NextInvoiceReplyDiscountType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NextInvoiceReplyDiscountType: valid values are %v", v, AllowedNextInvoiceReplyDiscountTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NextInvoiceReplyDiscountType) IsValid() bool {
	for _, existing := range AllowedNextInvoiceReplyDiscountTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NextInvoiceReply.Discount.Type value
func (v NextInvoiceReplyDiscountType) Ptr() *NextInvoiceReplyDiscountType {
	return &v
}

type NullableNextInvoiceReplyDiscountType struct {
	value *NextInvoiceReplyDiscountType
	isSet bool
}

func (v NullableNextInvoiceReplyDiscountType) Get() *NextInvoiceReplyDiscountType {
	return v.value
}

func (v *NullableNextInvoiceReplyDiscountType) Set(val *NextInvoiceReplyDiscountType) {
	v.value = val
	v.isSet = true
}

func (v NullableNextInvoiceReplyDiscountType) IsSet() bool {
	return v.isSet
}

func (v *NullableNextInvoiceReplyDiscountType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNextInvoiceReplyDiscountType(val *NextInvoiceReplyDiscountType) *NullableNextInvoiceReplyDiscountType {
	return &NullableNextInvoiceReplyDiscountType{value: val, isSet: true}
}

func (v NullableNextInvoiceReplyDiscountType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNextInvoiceReplyDiscountType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

