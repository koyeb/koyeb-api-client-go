/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GetDeploymentScalingReply struct for GetDeploymentScalingReply
type GetDeploymentScalingReply struct {
	Replicas []GetDeploymentScalingReplyItem `json:"replicas,omitempty"`
}

// NewGetDeploymentScalingReply instantiates a new GetDeploymentScalingReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeploymentScalingReply() *GetDeploymentScalingReply {
	this := GetDeploymentScalingReply{}
	return &this
}

// NewGetDeploymentScalingReplyWithDefaults instantiates a new GetDeploymentScalingReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeploymentScalingReplyWithDefaults() *GetDeploymentScalingReply {
	this := GetDeploymentScalingReply{}
	return &this
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *GetDeploymentScalingReply) GetReplicas() []GetDeploymentScalingReplyItem {
	if o == nil || isNil(o.Replicas) {
		var ret []GetDeploymentScalingReplyItem
		return ret
	}
	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeploymentScalingReply) GetReplicasOk() ([]GetDeploymentScalingReplyItem, bool) {
	if o == nil || isNil(o.Replicas) {
    return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *GetDeploymentScalingReply) HasReplicas() bool {
	if o != nil && !isNil(o.Replicas) {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given []GetDeploymentScalingReplyItem and assigns it to the Replicas field.
func (o *GetDeploymentScalingReply) SetReplicas(v []GetDeploymentScalingReplyItem) {
	o.Replicas = v
}

func (o GetDeploymentScalingReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Replicas) {
		toSerialize["replicas"] = o.Replicas
	}
	return json.Marshal(toSerialize)
}

type NullableGetDeploymentScalingReply struct {
	value *GetDeploymentScalingReply
	isSet bool
}

func (v NullableGetDeploymentScalingReply) Get() *GetDeploymentScalingReply {
	return v.value
}

func (v *NullableGetDeploymentScalingReply) Set(val *GetDeploymentScalingReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeploymentScalingReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeploymentScalingReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeploymentScalingReply(val *GetDeploymentScalingReply) *NullableGetDeploymentScalingReply {
	return &NullableGetDeploymentScalingReply{value: val, isSet: true}
}

func (v NullableGetDeploymentScalingReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeploymentScalingReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


