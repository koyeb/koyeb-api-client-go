/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GetDeploymentScalingReplyItem struct for GetDeploymentScalingReplyItem
type GetDeploymentScalingReplyItem struct {
	Region *string `json:"region,omitempty"`
	ReplicaIndex *int64 `json:"replica_index,omitempty"`
	// An array of `active` and `starting` instances.  Status of the active instance (and if none the most recent instance)  string status = 4;  Status message of the active instance (and if none the most recent instance)  string message = 5;
	Instances []Instance `json:"instances,omitempty"`
}

// NewGetDeploymentScalingReplyItem instantiates a new GetDeploymentScalingReplyItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetDeploymentScalingReplyItem() *GetDeploymentScalingReplyItem {
	this := GetDeploymentScalingReplyItem{}
	return &this
}

// NewGetDeploymentScalingReplyItemWithDefaults instantiates a new GetDeploymentScalingReplyItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetDeploymentScalingReplyItemWithDefaults() *GetDeploymentScalingReplyItem {
	this := GetDeploymentScalingReplyItem{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *GetDeploymentScalingReplyItem) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeploymentScalingReplyItem) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *GetDeploymentScalingReplyItem) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *GetDeploymentScalingReplyItem) SetRegion(v string) {
	o.Region = &v
}

// GetReplicaIndex returns the ReplicaIndex field value if set, zero value otherwise.
func (o *GetDeploymentScalingReplyItem) GetReplicaIndex() int64 {
	if o == nil || isNil(o.ReplicaIndex) {
		var ret int64
		return ret
	}
	return *o.ReplicaIndex
}

// GetReplicaIndexOk returns a tuple with the ReplicaIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeploymentScalingReplyItem) GetReplicaIndexOk() (*int64, bool) {
	if o == nil || isNil(o.ReplicaIndex) {
    return nil, false
	}
	return o.ReplicaIndex, true
}

// HasReplicaIndex returns a boolean if a field has been set.
func (o *GetDeploymentScalingReplyItem) HasReplicaIndex() bool {
	if o != nil && !isNil(o.ReplicaIndex) {
		return true
	}

	return false
}

// SetReplicaIndex gets a reference to the given int64 and assigns it to the ReplicaIndex field.
func (o *GetDeploymentScalingReplyItem) SetReplicaIndex(v int64) {
	o.ReplicaIndex = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *GetDeploymentScalingReplyItem) GetInstances() []Instance {
	if o == nil || isNil(o.Instances) {
		var ret []Instance
		return ret
	}
	return o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetDeploymentScalingReplyItem) GetInstancesOk() ([]Instance, bool) {
	if o == nil || isNil(o.Instances) {
    return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *GetDeploymentScalingReplyItem) HasInstances() bool {
	if o != nil && !isNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []Instance and assigns it to the Instances field.
func (o *GetDeploymentScalingReplyItem) SetInstances(v []Instance) {
	o.Instances = v
}

func (o GetDeploymentScalingReplyItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !isNil(o.ReplicaIndex) {
		toSerialize["replica_index"] = o.ReplicaIndex
	}
	if !isNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	return json.Marshal(toSerialize)
}

type NullableGetDeploymentScalingReplyItem struct {
	value *GetDeploymentScalingReplyItem
	isSet bool
}

func (v NullableGetDeploymentScalingReplyItem) Get() *GetDeploymentScalingReplyItem {
	return v.value
}

func (v *NullableGetDeploymentScalingReplyItem) Set(val *GetDeploymentScalingReplyItem) {
	v.value = val
	v.isSet = true
}

func (v NullableGetDeploymentScalingReplyItem) IsSet() bool {
	return v.isSet
}

func (v *NullableGetDeploymentScalingReplyItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetDeploymentScalingReplyItem(val *GetDeploymentScalingReplyItem) *NullableGetDeploymentScalingReplyItem {
	return &NullableGetDeploymentScalingReplyItem{value: val, isSet: true}
}

func (v NullableGetDeploymentScalingReplyItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetDeploymentScalingReplyItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


