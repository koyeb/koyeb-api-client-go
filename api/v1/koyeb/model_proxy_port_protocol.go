/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
	"fmt"
)

// ProxyPortProtocol the model 'ProxyPortProtocol'
type ProxyPortProtocol string

// List of ProxyPortProtocol
const (
	PROXYPORTPROTOCOL_TCP ProxyPortProtocol = "tcp"
)

// All allowed values of ProxyPortProtocol enum
var AllowedProxyPortProtocolEnumValues = []ProxyPortProtocol{
	"tcp",
}

func (v *ProxyPortProtocol) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProxyPortProtocol(value)
	for _, existing := range AllowedProxyPortProtocolEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProxyPortProtocol", value)
}

// NewProxyPortProtocolFromValue returns a pointer to a valid ProxyPortProtocol
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProxyPortProtocolFromValue(v string) (*ProxyPortProtocol, error) {
	ev := ProxyPortProtocol(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProxyPortProtocol: valid values are %v", v, AllowedProxyPortProtocolEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProxyPortProtocol) IsValid() bool {
	for _, existing := range AllowedProxyPortProtocolEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProxyPortProtocol value
func (v ProxyPortProtocol) Ptr() *ProxyPortProtocol {
	return &v
}

type NullableProxyPortProtocol struct {
	value *ProxyPortProtocol
	isSet bool
}

func (v NullableProxyPortProtocol) Get() *ProxyPortProtocol {
	return v.value
}

func (v *NullableProxyPortProtocol) Set(val *ProxyPortProtocol) {
	v.value = val
	v.isSet = true
}

func (v NullableProxyPortProtocol) IsSet() bool {
	return v.isSet
}

func (v *NullableProxyPortProtocol) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProxyPortProtocol(val *ProxyPortProtocol) *NullableProxyPortProtocol {
	return &NullableProxyPortProtocol{value: val, isSet: true}
}

func (v NullableProxyPortProtocol) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProxyPortProtocol) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

