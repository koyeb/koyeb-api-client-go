/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// Quotas struct for Quotas
type Quotas struct {
	Apps *string `json:"apps,omitempty"`
	Services *string `json:"services,omitempty"`
	Domains *string `json:"domains,omitempty"`
	ServicesByApp *string `json:"services_by_app,omitempty"`
	ServiceProvisioningConcurrency *string `json:"service_provisioning_concurrency,omitempty"`
	MemoryMb *string `json:"memory_mb,omitempty"`
	InstanceTypes []string `json:"instance_types,omitempty"`
	Regions []string `json:"regions,omitempty"`
	MaxOrganizationMembers *string `json:"max_organization_members,omitempty"`
	MaxInstancesByType *map[string]string `json:"max_instances_by_type,omitempty"`
	PersistentVolumesByRegion *map[string]PersistentVolumeQuotas `json:"persistent_volumes_by_region,omitempty"`
}

// NewQuotas instantiates a new Quotas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotas() *Quotas {
	this := Quotas{}
	return &this
}

// NewQuotasWithDefaults instantiates a new Quotas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotasWithDefaults() *Quotas {
	this := Quotas{}
	return &this
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *Quotas) GetApps() string {
	if o == nil || isNil(o.Apps) {
		var ret string
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetAppsOk() (*string, bool) {
	if o == nil || isNil(o.Apps) {
    return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *Quotas) HasApps() bool {
	if o != nil && !isNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given string and assigns it to the Apps field.
func (o *Quotas) SetApps(v string) {
	o.Apps = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *Quotas) GetServices() string {
	if o == nil || isNil(o.Services) {
		var ret string
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetServicesOk() (*string, bool) {
	if o == nil || isNil(o.Services) {
    return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *Quotas) HasServices() bool {
	if o != nil && !isNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given string and assigns it to the Services field.
func (o *Quotas) SetServices(v string) {
	o.Services = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *Quotas) GetDomains() string {
	if o == nil || isNil(o.Domains) {
		var ret string
		return ret
	}
	return *o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetDomainsOk() (*string, bool) {
	if o == nil || isNil(o.Domains) {
    return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *Quotas) HasDomains() bool {
	if o != nil && !isNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given string and assigns it to the Domains field.
func (o *Quotas) SetDomains(v string) {
	o.Domains = &v
}

// GetServicesByApp returns the ServicesByApp field value if set, zero value otherwise.
func (o *Quotas) GetServicesByApp() string {
	if o == nil || isNil(o.ServicesByApp) {
		var ret string
		return ret
	}
	return *o.ServicesByApp
}

// GetServicesByAppOk returns a tuple with the ServicesByApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetServicesByAppOk() (*string, bool) {
	if o == nil || isNil(o.ServicesByApp) {
    return nil, false
	}
	return o.ServicesByApp, true
}

// HasServicesByApp returns a boolean if a field has been set.
func (o *Quotas) HasServicesByApp() bool {
	if o != nil && !isNil(o.ServicesByApp) {
		return true
	}

	return false
}

// SetServicesByApp gets a reference to the given string and assigns it to the ServicesByApp field.
func (o *Quotas) SetServicesByApp(v string) {
	o.ServicesByApp = &v
}

// GetServiceProvisioningConcurrency returns the ServiceProvisioningConcurrency field value if set, zero value otherwise.
func (o *Quotas) GetServiceProvisioningConcurrency() string {
	if o == nil || isNil(o.ServiceProvisioningConcurrency) {
		var ret string
		return ret
	}
	return *o.ServiceProvisioningConcurrency
}

// GetServiceProvisioningConcurrencyOk returns a tuple with the ServiceProvisioningConcurrency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetServiceProvisioningConcurrencyOk() (*string, bool) {
	if o == nil || isNil(o.ServiceProvisioningConcurrency) {
    return nil, false
	}
	return o.ServiceProvisioningConcurrency, true
}

// HasServiceProvisioningConcurrency returns a boolean if a field has been set.
func (o *Quotas) HasServiceProvisioningConcurrency() bool {
	if o != nil && !isNil(o.ServiceProvisioningConcurrency) {
		return true
	}

	return false
}

// SetServiceProvisioningConcurrency gets a reference to the given string and assigns it to the ServiceProvisioningConcurrency field.
func (o *Quotas) SetServiceProvisioningConcurrency(v string) {
	o.ServiceProvisioningConcurrency = &v
}

// GetMemoryMb returns the MemoryMb field value if set, zero value otherwise.
func (o *Quotas) GetMemoryMb() string {
	if o == nil || isNil(o.MemoryMb) {
		var ret string
		return ret
	}
	return *o.MemoryMb
}

// GetMemoryMbOk returns a tuple with the MemoryMb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetMemoryMbOk() (*string, bool) {
	if o == nil || isNil(o.MemoryMb) {
    return nil, false
	}
	return o.MemoryMb, true
}

// HasMemoryMb returns a boolean if a field has been set.
func (o *Quotas) HasMemoryMb() bool {
	if o != nil && !isNil(o.MemoryMb) {
		return true
	}

	return false
}

// SetMemoryMb gets a reference to the given string and assigns it to the MemoryMb field.
func (o *Quotas) SetMemoryMb(v string) {
	o.MemoryMb = &v
}

// GetInstanceTypes returns the InstanceTypes field value if set, zero value otherwise.
func (o *Quotas) GetInstanceTypes() []string {
	if o == nil || isNil(o.InstanceTypes) {
		var ret []string
		return ret
	}
	return o.InstanceTypes
}

// GetInstanceTypesOk returns a tuple with the InstanceTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetInstanceTypesOk() ([]string, bool) {
	if o == nil || isNil(o.InstanceTypes) {
    return nil, false
	}
	return o.InstanceTypes, true
}

// HasInstanceTypes returns a boolean if a field has been set.
func (o *Quotas) HasInstanceTypes() bool {
	if o != nil && !isNil(o.InstanceTypes) {
		return true
	}

	return false
}

// SetInstanceTypes gets a reference to the given []string and assigns it to the InstanceTypes field.
func (o *Quotas) SetInstanceTypes(v []string) {
	o.InstanceTypes = v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *Quotas) GetRegions() []string {
	if o == nil || isNil(o.Regions) {
		var ret []string
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetRegionsOk() ([]string, bool) {
	if o == nil || isNil(o.Regions) {
    return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *Quotas) HasRegions() bool {
	if o != nil && !isNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []string and assigns it to the Regions field.
func (o *Quotas) SetRegions(v []string) {
	o.Regions = v
}

// GetMaxOrganizationMembers returns the MaxOrganizationMembers field value if set, zero value otherwise.
func (o *Quotas) GetMaxOrganizationMembers() string {
	if o == nil || isNil(o.MaxOrganizationMembers) {
		var ret string
		return ret
	}
	return *o.MaxOrganizationMembers
}

// GetMaxOrganizationMembersOk returns a tuple with the MaxOrganizationMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetMaxOrganizationMembersOk() (*string, bool) {
	if o == nil || isNil(o.MaxOrganizationMembers) {
    return nil, false
	}
	return o.MaxOrganizationMembers, true
}

// HasMaxOrganizationMembers returns a boolean if a field has been set.
func (o *Quotas) HasMaxOrganizationMembers() bool {
	if o != nil && !isNil(o.MaxOrganizationMembers) {
		return true
	}

	return false
}

// SetMaxOrganizationMembers gets a reference to the given string and assigns it to the MaxOrganizationMembers field.
func (o *Quotas) SetMaxOrganizationMembers(v string) {
	o.MaxOrganizationMembers = &v
}

// GetMaxInstancesByType returns the MaxInstancesByType field value if set, zero value otherwise.
func (o *Quotas) GetMaxInstancesByType() map[string]string {
	if o == nil || isNil(o.MaxInstancesByType) {
		var ret map[string]string
		return ret
	}
	return *o.MaxInstancesByType
}

// GetMaxInstancesByTypeOk returns a tuple with the MaxInstancesByType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetMaxInstancesByTypeOk() (*map[string]string, bool) {
	if o == nil || isNil(o.MaxInstancesByType) {
    return nil, false
	}
	return o.MaxInstancesByType, true
}

// HasMaxInstancesByType returns a boolean if a field has been set.
func (o *Quotas) HasMaxInstancesByType() bool {
	if o != nil && !isNil(o.MaxInstancesByType) {
		return true
	}

	return false
}

// SetMaxInstancesByType gets a reference to the given map[string]string and assigns it to the MaxInstancesByType field.
func (o *Quotas) SetMaxInstancesByType(v map[string]string) {
	o.MaxInstancesByType = &v
}

// GetPersistentVolumesByRegion returns the PersistentVolumesByRegion field value if set, zero value otherwise.
func (o *Quotas) GetPersistentVolumesByRegion() map[string]PersistentVolumeQuotas {
	if o == nil || isNil(o.PersistentVolumesByRegion) {
		var ret map[string]PersistentVolumeQuotas
		return ret
	}
	return *o.PersistentVolumesByRegion
}

// GetPersistentVolumesByRegionOk returns a tuple with the PersistentVolumesByRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quotas) GetPersistentVolumesByRegionOk() (*map[string]PersistentVolumeQuotas, bool) {
	if o == nil || isNil(o.PersistentVolumesByRegion) {
    return nil, false
	}
	return o.PersistentVolumesByRegion, true
}

// HasPersistentVolumesByRegion returns a boolean if a field has been set.
func (o *Quotas) HasPersistentVolumesByRegion() bool {
	if o != nil && !isNil(o.PersistentVolumesByRegion) {
		return true
	}

	return false
}

// SetPersistentVolumesByRegion gets a reference to the given map[string]PersistentVolumeQuotas and assigns it to the PersistentVolumesByRegion field.
func (o *Quotas) SetPersistentVolumesByRegion(v map[string]PersistentVolumeQuotas) {
	o.PersistentVolumesByRegion = &v
}

func (o Quotas) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !isNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !isNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !isNil(o.ServicesByApp) {
		toSerialize["services_by_app"] = o.ServicesByApp
	}
	if !isNil(o.ServiceProvisioningConcurrency) {
		toSerialize["service_provisioning_concurrency"] = o.ServiceProvisioningConcurrency
	}
	if !isNil(o.MemoryMb) {
		toSerialize["memory_mb"] = o.MemoryMb
	}
	if !isNil(o.InstanceTypes) {
		toSerialize["instance_types"] = o.InstanceTypes
	}
	if !isNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	if !isNil(o.MaxOrganizationMembers) {
		toSerialize["max_organization_members"] = o.MaxOrganizationMembers
	}
	if !isNil(o.MaxInstancesByType) {
		toSerialize["max_instances_by_type"] = o.MaxInstancesByType
	}
	if !isNil(o.PersistentVolumesByRegion) {
		toSerialize["persistent_volumes_by_region"] = o.PersistentVolumesByRegion
	}
	return json.Marshal(toSerialize)
}

type NullableQuotas struct {
	value *Quotas
	isSet bool
}

func (v NullableQuotas) Get() *Quotas {
	return v.value
}

func (v *NullableQuotas) Set(val *Quotas) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotas) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotas(val *Quotas) *NullableQuotas {
	return &NullableQuotas{value: val, isSet: true}
}

func (v NullableQuotas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


