/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
	"time"
)

// checks if the Organization type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Organization{}

// Organization struct for Organization
type Organization struct {
	Id *string `json:"id,omitempty"`
	Address1 *string `json:"address1,omitempty"`
	Address2 *string `json:"address2,omitempty"`
	City *string `json:"city,omitempty"`
	PostalCode *string `json:"postal_code,omitempty"`
	State *string `json:"state,omitempty"`
	Country *string `json:"country,omitempty"`
	Company *bool `json:"company,omitempty"`
	VatNumber *string `json:"vat_number,omitempty"`
	BillingName *string `json:"billing_name,omitempty"`
	BillingEmail *string `json:"billing_email,omitempty"`
	Name *string `json:"name,omitempty"`
	Plan *Plan `json:"plan,omitempty"`
	PlanUpdatedAt *time.Time `json:"plan_updated_at,omitempty"`
	HasPaymentMethod *bool `json:"has_payment_method,omitempty"`
	SubscriptionId *string `json:"subscription_id,omitempty"`
	SignupQualification map[string]interface{} `json:"signup_qualification,omitempty"`
	Status *OrganizationStatus `json:"status,omitempty"`
	StatusMessage *OrganizationDetailedStatus `json:"status_message,omitempty"`
	Verified *bool `json:"verified,omitempty"`
}

// NewOrganization instantiates a new Organization object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganization() *Organization {
	this := Organization{}
	var plan Plan = PLAN_HOBBY
	this.Plan = &plan
	var status OrganizationStatus = ORGANIZATIONSTATUS_WARNING
	this.Status = &status
	var statusMessage OrganizationDetailedStatus = ORGANIZATIONDETAILEDSTATUS_NEW
	this.StatusMessage = &statusMessage
	return &this
}

// NewOrganizationWithDefaults instantiates a new Organization object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationWithDefaults() *Organization {
	this := Organization{}
	var plan Plan = PLAN_HOBBY
	this.Plan = &plan
	var status OrganizationStatus = ORGANIZATIONSTATUS_WARNING
	this.Status = &status
	var statusMessage OrganizationDetailedStatus = ORGANIZATIONDETAILEDSTATUS_NEW
	this.StatusMessage = &statusMessage
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Organization) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Organization) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Organization) SetId(v string) {
	o.Id = &v
}

// GetAddress1 returns the Address1 field value if set, zero value otherwise.
func (o *Organization) GetAddress1() string {
	if o == nil || IsNil(o.Address1) {
		var ret string
		return ret
	}
	return *o.Address1
}

// GetAddress1Ok returns a tuple with the Address1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetAddress1Ok() (*string, bool) {
	if o == nil || IsNil(o.Address1) {
		return nil, false
	}
	return o.Address1, true
}

// HasAddress1 returns a boolean if a field has been set.
func (o *Organization) HasAddress1() bool {
	if o != nil && !IsNil(o.Address1) {
		return true
	}

	return false
}

// SetAddress1 gets a reference to the given string and assigns it to the Address1 field.
func (o *Organization) SetAddress1(v string) {
	o.Address1 = &v
}

// GetAddress2 returns the Address2 field value if set, zero value otherwise.
func (o *Organization) GetAddress2() string {
	if o == nil || IsNil(o.Address2) {
		var ret string
		return ret
	}
	return *o.Address2
}

// GetAddress2Ok returns a tuple with the Address2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetAddress2Ok() (*string, bool) {
	if o == nil || IsNil(o.Address2) {
		return nil, false
	}
	return o.Address2, true
}

// HasAddress2 returns a boolean if a field has been set.
func (o *Organization) HasAddress2() bool {
	if o != nil && !IsNil(o.Address2) {
		return true
	}

	return false
}

// SetAddress2 gets a reference to the given string and assigns it to the Address2 field.
func (o *Organization) SetAddress2(v string) {
	o.Address2 = &v
}

// GetCity returns the City field value if set, zero value otherwise.
func (o *Organization) GetCity() string {
	if o == nil || IsNil(o.City) {
		var ret string
		return ret
	}
	return *o.City
}

// GetCityOk returns a tuple with the City field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCityOk() (*string, bool) {
	if o == nil || IsNil(o.City) {
		return nil, false
	}
	return o.City, true
}

// HasCity returns a boolean if a field has been set.
func (o *Organization) HasCity() bool {
	if o != nil && !IsNil(o.City) {
		return true
	}

	return false
}

// SetCity gets a reference to the given string and assigns it to the City field.
func (o *Organization) SetCity(v string) {
	o.City = &v
}

// GetPostalCode returns the PostalCode field value if set, zero value otherwise.
func (o *Organization) GetPostalCode() string {
	if o == nil || IsNil(o.PostalCode) {
		var ret string
		return ret
	}
	return *o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetPostalCodeOk() (*string, bool) {
	if o == nil || IsNil(o.PostalCode) {
		return nil, false
	}
	return o.PostalCode, true
}

// HasPostalCode returns a boolean if a field has been set.
func (o *Organization) HasPostalCode() bool {
	if o != nil && !IsNil(o.PostalCode) {
		return true
	}

	return false
}

// SetPostalCode gets a reference to the given string and assigns it to the PostalCode field.
func (o *Organization) SetPostalCode(v string) {
	o.PostalCode = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *Organization) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *Organization) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *Organization) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *Organization) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *Organization) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *Organization) SetCountry(v string) {
	o.Country = &v
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *Organization) GetCompany() bool {
	if o == nil || IsNil(o.Company) {
		var ret bool
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetCompanyOk() (*bool, bool) {
	if o == nil || IsNil(o.Company) {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *Organization) HasCompany() bool {
	if o != nil && !IsNil(o.Company) {
		return true
	}

	return false
}

// SetCompany gets a reference to the given bool and assigns it to the Company field.
func (o *Organization) SetCompany(v bool) {
	o.Company = &v
}

// GetVatNumber returns the VatNumber field value if set, zero value otherwise.
func (o *Organization) GetVatNumber() string {
	if o == nil || IsNil(o.VatNumber) {
		var ret string
		return ret
	}
	return *o.VatNumber
}

// GetVatNumberOk returns a tuple with the VatNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetVatNumberOk() (*string, bool) {
	if o == nil || IsNil(o.VatNumber) {
		return nil, false
	}
	return o.VatNumber, true
}

// HasVatNumber returns a boolean if a field has been set.
func (o *Organization) HasVatNumber() bool {
	if o != nil && !IsNil(o.VatNumber) {
		return true
	}

	return false
}

// SetVatNumber gets a reference to the given string and assigns it to the VatNumber field.
func (o *Organization) SetVatNumber(v string) {
	o.VatNumber = &v
}

// GetBillingName returns the BillingName field value if set, zero value otherwise.
func (o *Organization) GetBillingName() string {
	if o == nil || IsNil(o.BillingName) {
		var ret string
		return ret
	}
	return *o.BillingName
}

// GetBillingNameOk returns a tuple with the BillingName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetBillingNameOk() (*string, bool) {
	if o == nil || IsNil(o.BillingName) {
		return nil, false
	}
	return o.BillingName, true
}

// HasBillingName returns a boolean if a field has been set.
func (o *Organization) HasBillingName() bool {
	if o != nil && !IsNil(o.BillingName) {
		return true
	}

	return false
}

// SetBillingName gets a reference to the given string and assigns it to the BillingName field.
func (o *Organization) SetBillingName(v string) {
	o.BillingName = &v
}

// GetBillingEmail returns the BillingEmail field value if set, zero value otherwise.
func (o *Organization) GetBillingEmail() string {
	if o == nil || IsNil(o.BillingEmail) {
		var ret string
		return ret
	}
	return *o.BillingEmail
}

// GetBillingEmailOk returns a tuple with the BillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetBillingEmailOk() (*string, bool) {
	if o == nil || IsNil(o.BillingEmail) {
		return nil, false
	}
	return o.BillingEmail, true
}

// HasBillingEmail returns a boolean if a field has been set.
func (o *Organization) HasBillingEmail() bool {
	if o != nil && !IsNil(o.BillingEmail) {
		return true
	}

	return false
}

// SetBillingEmail gets a reference to the given string and assigns it to the BillingEmail field.
func (o *Organization) SetBillingEmail(v string) {
	o.BillingEmail = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Organization) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Organization) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Organization) SetName(v string) {
	o.Name = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *Organization) GetPlan() Plan {
	if o == nil || IsNil(o.Plan) {
		var ret Plan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetPlanOk() (*Plan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *Organization) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given Plan and assigns it to the Plan field.
func (o *Organization) SetPlan(v Plan) {
	o.Plan = &v
}

// GetPlanUpdatedAt returns the PlanUpdatedAt field value if set, zero value otherwise.
func (o *Organization) GetPlanUpdatedAt() time.Time {
	if o == nil || IsNil(o.PlanUpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.PlanUpdatedAt
}

// GetPlanUpdatedAtOk returns a tuple with the PlanUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetPlanUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PlanUpdatedAt) {
		return nil, false
	}
	return o.PlanUpdatedAt, true
}

// HasPlanUpdatedAt returns a boolean if a field has been set.
func (o *Organization) HasPlanUpdatedAt() bool {
	if o != nil && !IsNil(o.PlanUpdatedAt) {
		return true
	}

	return false
}

// SetPlanUpdatedAt gets a reference to the given time.Time and assigns it to the PlanUpdatedAt field.
func (o *Organization) SetPlanUpdatedAt(v time.Time) {
	o.PlanUpdatedAt = &v
}

// GetHasPaymentMethod returns the HasPaymentMethod field value if set, zero value otherwise.
func (o *Organization) GetHasPaymentMethod() bool {
	if o == nil || IsNil(o.HasPaymentMethod) {
		var ret bool
		return ret
	}
	return *o.HasPaymentMethod
}

// GetHasPaymentMethodOk returns a tuple with the HasPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetHasPaymentMethodOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPaymentMethod) {
		return nil, false
	}
	return o.HasPaymentMethod, true
}

// HasHasPaymentMethod returns a boolean if a field has been set.
func (o *Organization) HasHasPaymentMethod() bool {
	if o != nil && !IsNil(o.HasPaymentMethod) {
		return true
	}

	return false
}

// SetHasPaymentMethod gets a reference to the given bool and assigns it to the HasPaymentMethod field.
func (o *Organization) SetHasPaymentMethod(v bool) {
	o.HasPaymentMethod = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *Organization) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *Organization) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *Organization) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetSignupQualification returns the SignupQualification field value if set, zero value otherwise.
func (o *Organization) GetSignupQualification() map[string]interface{} {
	if o == nil || IsNil(o.SignupQualification) {
		var ret map[string]interface{}
		return ret
	}
	return o.SignupQualification
}

// GetSignupQualificationOk returns a tuple with the SignupQualification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetSignupQualificationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.SignupQualification) {
		return map[string]interface{}{}, false
	}
	return o.SignupQualification, true
}

// HasSignupQualification returns a boolean if a field has been set.
func (o *Organization) HasSignupQualification() bool {
	if o != nil && !IsNil(o.SignupQualification) {
		return true
	}

	return false
}

// SetSignupQualification gets a reference to the given map[string]interface{} and assigns it to the SignupQualification field.
func (o *Organization) SetSignupQualification(v map[string]interface{}) {
	o.SignupQualification = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Organization) GetStatus() OrganizationStatus {
	if o == nil || IsNil(o.Status) {
		var ret OrganizationStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetStatusOk() (*OrganizationStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Organization) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OrganizationStatus and assigns it to the Status field.
func (o *Organization) SetStatus(v OrganizationStatus) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *Organization) GetStatusMessage() OrganizationDetailedStatus {
	if o == nil || IsNil(o.StatusMessage) {
		var ret OrganizationDetailedStatus
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetStatusMessageOk() (*OrganizationDetailedStatus, bool) {
	if o == nil || IsNil(o.StatusMessage) {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *Organization) HasStatusMessage() bool {
	if o != nil && !IsNil(o.StatusMessage) {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given OrganizationDetailedStatus and assigns it to the StatusMessage field.
func (o *Organization) SetStatusMessage(v OrganizationDetailedStatus) {
	o.StatusMessage = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *Organization) GetVerified() bool {
	if o == nil || IsNil(o.Verified) {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Organization) GetVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.Verified) {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *Organization) HasVerified() bool {
	if o != nil && !IsNil(o.Verified) {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *Organization) SetVerified(v bool) {
	o.Verified = &v
}

func (o Organization) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Organization) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Address1) {
		toSerialize["address1"] = o.Address1
	}
	if !IsNil(o.Address2) {
		toSerialize["address2"] = o.Address2
	}
	if !IsNil(o.City) {
		toSerialize["city"] = o.City
	}
	if !IsNil(o.PostalCode) {
		toSerialize["postal_code"] = o.PostalCode
	}
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.Company) {
		toSerialize["company"] = o.Company
	}
	if !IsNil(o.VatNumber) {
		toSerialize["vat_number"] = o.VatNumber
	}
	if !IsNil(o.BillingName) {
		toSerialize["billing_name"] = o.BillingName
	}
	if !IsNil(o.BillingEmail) {
		toSerialize["billing_email"] = o.BillingEmail
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	if !IsNil(o.PlanUpdatedAt) {
		toSerialize["plan_updated_at"] = o.PlanUpdatedAt
	}
	if !IsNil(o.HasPaymentMethod) {
		toSerialize["has_payment_method"] = o.HasPaymentMethod
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.SignupQualification) {
		toSerialize["signup_qualification"] = o.SignupQualification
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.StatusMessage) {
		toSerialize["status_message"] = o.StatusMessage
	}
	if !IsNil(o.Verified) {
		toSerialize["verified"] = o.Verified
	}
	return toSerialize, nil
}

type NullableOrganization struct {
	value *Organization
	isSet bool
}

func (v NullableOrganization) Get() *Organization {
	return v.value
}

func (v *NullableOrganization) Set(val *Organization) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganization) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganization) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganization(val *Organization) *NullableOrganization {
	return &NullableOrganization{value: val, isSet: true}
}

func (v NullableOrganization) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganization) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


