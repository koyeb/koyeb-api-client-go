/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// checks if the ConfirmPaymentAuthorizationReply type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfirmPaymentAuthorizationReply{}

// ConfirmPaymentAuthorizationReply struct for ConfirmPaymentAuthorizationReply
type ConfirmPaymentAuthorizationReply struct {
	PaymentMethod *PaymentMethod `json:"payment_method,omitempty"`
}

// NewConfirmPaymentAuthorizationReply instantiates a new ConfirmPaymentAuthorizationReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmPaymentAuthorizationReply() *ConfirmPaymentAuthorizationReply {
	this := ConfirmPaymentAuthorizationReply{}
	return &this
}

// NewConfirmPaymentAuthorizationReplyWithDefaults instantiates a new ConfirmPaymentAuthorizationReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmPaymentAuthorizationReplyWithDefaults() *ConfirmPaymentAuthorizationReply {
	this := ConfirmPaymentAuthorizationReply{}
	return &this
}

// GetPaymentMethod returns the PaymentMethod field value if set, zero value otherwise.
func (o *ConfirmPaymentAuthorizationReply) GetPaymentMethod() PaymentMethod {
	if o == nil || IsNil(o.PaymentMethod) {
		var ret PaymentMethod
		return ret
	}
	return *o.PaymentMethod
}

// GetPaymentMethodOk returns a tuple with the PaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmPaymentAuthorizationReply) GetPaymentMethodOk() (*PaymentMethod, bool) {
	if o == nil || IsNil(o.PaymentMethod) {
		return nil, false
	}
	return o.PaymentMethod, true
}

// HasPaymentMethod returns a boolean if a field has been set.
func (o *ConfirmPaymentAuthorizationReply) HasPaymentMethod() bool {
	if o != nil && !IsNil(o.PaymentMethod) {
		return true
	}

	return false
}

// SetPaymentMethod gets a reference to the given PaymentMethod and assigns it to the PaymentMethod field.
func (o *ConfirmPaymentAuthorizationReply) SetPaymentMethod(v PaymentMethod) {
	o.PaymentMethod = &v
}

func (o ConfirmPaymentAuthorizationReply) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfirmPaymentAuthorizationReply) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PaymentMethod) {
		toSerialize["payment_method"] = o.PaymentMethod
	}
	return toSerialize, nil
}

type NullableConfirmPaymentAuthorizationReply struct {
	value *ConfirmPaymentAuthorizationReply
	isSet bool
}

func (v NullableConfirmPaymentAuthorizationReply) Get() *ConfirmPaymentAuthorizationReply {
	return v.value
}

func (v *NullableConfirmPaymentAuthorizationReply) Set(val *ConfirmPaymentAuthorizationReply) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmPaymentAuthorizationReply) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmPaymentAuthorizationReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmPaymentAuthorizationReply(val *ConfirmPaymentAuthorizationReply) *NullableConfirmPaymentAuthorizationReply {
	return &NullableConfirmPaymentAuthorizationReply{value: val, isSet: true}
}

func (v NullableConfirmPaymentAuthorizationReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmPaymentAuthorizationReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


