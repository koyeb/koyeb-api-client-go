/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// NextInvoiceReply struct for NextInvoiceReply
type NextInvoiceReply struct {
	StripeInvoice map[string]interface{} `json:"stripe_invoice,omitempty"`
	Lines []NextInvoiceReplyLine `json:"lines,omitempty"`
	Discounts []NextInvoiceReplyDiscount `json:"discounts,omitempty"`
}

// NewNextInvoiceReply instantiates a new NextInvoiceReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNextInvoiceReply() *NextInvoiceReply {
	this := NextInvoiceReply{}
	return &this
}

// NewNextInvoiceReplyWithDefaults instantiates a new NextInvoiceReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNextInvoiceReplyWithDefaults() *NextInvoiceReply {
	this := NextInvoiceReply{}
	return &this
}

// GetStripeInvoice returns the StripeInvoice field value if set, zero value otherwise.
func (o *NextInvoiceReply) GetStripeInvoice() map[string]interface{} {
	if o == nil || isNil(o.StripeInvoice) {
		var ret map[string]interface{}
		return ret
	}
	return o.StripeInvoice
}

// GetStripeInvoiceOk returns a tuple with the StripeInvoice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NextInvoiceReply) GetStripeInvoiceOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.StripeInvoice) {
    return map[string]interface{}{}, false
	}
	return o.StripeInvoice, true
}

// HasStripeInvoice returns a boolean if a field has been set.
func (o *NextInvoiceReply) HasStripeInvoice() bool {
	if o != nil && !isNil(o.StripeInvoice) {
		return true
	}

	return false
}

// SetStripeInvoice gets a reference to the given map[string]interface{} and assigns it to the StripeInvoice field.
func (o *NextInvoiceReply) SetStripeInvoice(v map[string]interface{}) {
	o.StripeInvoice = v
}

// GetLines returns the Lines field value if set, zero value otherwise.
func (o *NextInvoiceReply) GetLines() []NextInvoiceReplyLine {
	if o == nil || isNil(o.Lines) {
		var ret []NextInvoiceReplyLine
		return ret
	}
	return o.Lines
}

// GetLinesOk returns a tuple with the Lines field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NextInvoiceReply) GetLinesOk() ([]NextInvoiceReplyLine, bool) {
	if o == nil || isNil(o.Lines) {
    return nil, false
	}
	return o.Lines, true
}

// HasLines returns a boolean if a field has been set.
func (o *NextInvoiceReply) HasLines() bool {
	if o != nil && !isNil(o.Lines) {
		return true
	}

	return false
}

// SetLines gets a reference to the given []NextInvoiceReplyLine and assigns it to the Lines field.
func (o *NextInvoiceReply) SetLines(v []NextInvoiceReplyLine) {
	o.Lines = v
}

// GetDiscounts returns the Discounts field value if set, zero value otherwise.
func (o *NextInvoiceReply) GetDiscounts() []NextInvoiceReplyDiscount {
	if o == nil || isNil(o.Discounts) {
		var ret []NextInvoiceReplyDiscount
		return ret
	}
	return o.Discounts
}

// GetDiscountsOk returns a tuple with the Discounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NextInvoiceReply) GetDiscountsOk() ([]NextInvoiceReplyDiscount, bool) {
	if o == nil || isNil(o.Discounts) {
    return nil, false
	}
	return o.Discounts, true
}

// HasDiscounts returns a boolean if a field has been set.
func (o *NextInvoiceReply) HasDiscounts() bool {
	if o != nil && !isNil(o.Discounts) {
		return true
	}

	return false
}

// SetDiscounts gets a reference to the given []NextInvoiceReplyDiscount and assigns it to the Discounts field.
func (o *NextInvoiceReply) SetDiscounts(v []NextInvoiceReplyDiscount) {
	o.Discounts = v
}

func (o NextInvoiceReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StripeInvoice) {
		toSerialize["stripe_invoice"] = o.StripeInvoice
	}
	if !isNil(o.Lines) {
		toSerialize["lines"] = o.Lines
	}
	if !isNil(o.Discounts) {
		toSerialize["discounts"] = o.Discounts
	}
	return json.Marshal(toSerialize)
}

type NullableNextInvoiceReply struct {
	value *NextInvoiceReply
	isSet bool
}

func (v NullableNextInvoiceReply) Get() *NextInvoiceReply {
	return v.value
}

func (v *NullableNextInvoiceReply) Set(val *NextInvoiceReply) {
	v.value = val
	v.isSet = true
}

func (v NullableNextInvoiceReply) IsSet() bool {
	return v.isSet
}

func (v *NullableNextInvoiceReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNextInvoiceReply(val *NextInvoiceReply) *NullableNextInvoiceReply {
	return &NullableNextInvoiceReply{value: val, isSet: true}
}

func (v NullableNextInvoiceReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNextInvoiceReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


