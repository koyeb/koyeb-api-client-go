/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// checks if the UpdateOrganizationPlanRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateOrganizationPlanRequest{}

// UpdateOrganizationPlanRequest struct for UpdateOrganizationPlanRequest
type UpdateOrganizationPlanRequest struct {
	Plan *Plan `json:"plan,omitempty"`
}

// NewUpdateOrganizationPlanRequest instantiates a new UpdateOrganizationPlanRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateOrganizationPlanRequest() *UpdateOrganizationPlanRequest {
	this := UpdateOrganizationPlanRequest{}
	var plan Plan = PLAN_HOBBY
	this.Plan = &plan
	return &this
}

// NewUpdateOrganizationPlanRequestWithDefaults instantiates a new UpdateOrganizationPlanRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateOrganizationPlanRequestWithDefaults() *UpdateOrganizationPlanRequest {
	this := UpdateOrganizationPlanRequest{}
	var plan Plan = PLAN_HOBBY
	this.Plan = &plan
	return &this
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *UpdateOrganizationPlanRequest) GetPlan() Plan {
	if o == nil || IsNil(o.Plan) {
		var ret Plan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateOrganizationPlanRequest) GetPlanOk() (*Plan, bool) {
	if o == nil || IsNil(o.Plan) {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *UpdateOrganizationPlanRequest) HasPlan() bool {
	if o != nil && !IsNil(o.Plan) {
		return true
	}

	return false
}

// SetPlan gets a reference to the given Plan and assigns it to the Plan field.
func (o *UpdateOrganizationPlanRequest) SetPlan(v Plan) {
	o.Plan = &v
}

func (o UpdateOrganizationPlanRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateOrganizationPlanRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Plan) {
		toSerialize["plan"] = o.Plan
	}
	return toSerialize, nil
}

type NullableUpdateOrganizationPlanRequest struct {
	value *UpdateOrganizationPlanRequest
	isSet bool
}

func (v NullableUpdateOrganizationPlanRequest) Get() *UpdateOrganizationPlanRequest {
	return v.value
}

func (v *NullableUpdateOrganizationPlanRequest) Set(val *UpdateOrganizationPlanRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateOrganizationPlanRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateOrganizationPlanRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateOrganizationPlanRequest(val *UpdateOrganizationPlanRequest) *NullableUpdateOrganizationPlanRequest {
	return &NullableUpdateOrganizationPlanRequest{value: val, isSet: true}
}

func (v NullableUpdateOrganizationPlanRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateOrganizationPlanRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


