/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// checks if the DiscourseAuthRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DiscourseAuthRequest{}

// DiscourseAuthRequest struct for DiscourseAuthRequest
type DiscourseAuthRequest struct {
	Payload *string `json:"payload,omitempty"`
	Sig *string `json:"sig,omitempty"`
}

// NewDiscourseAuthRequest instantiates a new DiscourseAuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiscourseAuthRequest() *DiscourseAuthRequest {
	this := DiscourseAuthRequest{}
	return &this
}

// NewDiscourseAuthRequestWithDefaults instantiates a new DiscourseAuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiscourseAuthRequestWithDefaults() *DiscourseAuthRequest {
	this := DiscourseAuthRequest{}
	return &this
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *DiscourseAuthRequest) GetPayload() string {
	if o == nil || IsNil(o.Payload) {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscourseAuthRequest) GetPayloadOk() (*string, bool) {
	if o == nil || IsNil(o.Payload) {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *DiscourseAuthRequest) HasPayload() bool {
	if o != nil && !IsNil(o.Payload) {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *DiscourseAuthRequest) SetPayload(v string) {
	o.Payload = &v
}

// GetSig returns the Sig field value if set, zero value otherwise.
func (o *DiscourseAuthRequest) GetSig() string {
	if o == nil || IsNil(o.Sig) {
		var ret string
		return ret
	}
	return *o.Sig
}

// GetSigOk returns a tuple with the Sig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiscourseAuthRequest) GetSigOk() (*string, bool) {
	if o == nil || IsNil(o.Sig) {
		return nil, false
	}
	return o.Sig, true
}

// HasSig returns a boolean if a field has been set.
func (o *DiscourseAuthRequest) HasSig() bool {
	if o != nil && !IsNil(o.Sig) {
		return true
	}

	return false
}

// SetSig gets a reference to the given string and assigns it to the Sig field.
func (o *DiscourseAuthRequest) SetSig(v string) {
	o.Sig = &v
}

func (o DiscourseAuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DiscourseAuthRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Payload) {
		toSerialize["payload"] = o.Payload
	}
	if !IsNil(o.Sig) {
		toSerialize["sig"] = o.Sig
	}
	return toSerialize, nil
}

type NullableDiscourseAuthRequest struct {
	value *DiscourseAuthRequest
	isSet bool
}

func (v NullableDiscourseAuthRequest) Get() *DiscourseAuthRequest {
	return v.value
}

func (v *NullableDiscourseAuthRequest) Set(val *DiscourseAuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDiscourseAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDiscourseAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiscourseAuthRequest(val *DiscourseAuthRequest) *NullableDiscourseAuthRequest {
	return &NullableDiscourseAuthRequest{value: val, isSet: true}
}

func (v NullableDiscourseAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiscourseAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


