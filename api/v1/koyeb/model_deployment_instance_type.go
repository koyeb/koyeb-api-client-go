/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// checks if the DeploymentInstanceType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeploymentInstanceType{}

// DeploymentInstanceType struct for DeploymentInstanceType
type DeploymentInstanceType struct {
	Scopes []string `json:"scopes,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewDeploymentInstanceType instantiates a new DeploymentInstanceType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentInstanceType() *DeploymentInstanceType {
	this := DeploymentInstanceType{}
	return &this
}

// NewDeploymentInstanceTypeWithDefaults instantiates a new DeploymentInstanceType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentInstanceTypeWithDefaults() *DeploymentInstanceType {
	this := DeploymentInstanceType{}
	return &this
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *DeploymentInstanceType) GetScopes() []string {
	if o == nil || IsNil(o.Scopes) {
		var ret []string
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentInstanceType) GetScopesOk() ([]string, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *DeploymentInstanceType) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []string and assigns it to the Scopes field.
func (o *DeploymentInstanceType) SetScopes(v []string) {
	o.Scopes = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *DeploymentInstanceType) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentInstanceType) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *DeploymentInstanceType) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *DeploymentInstanceType) SetType(v string) {
	o.Type = &v
}

func (o DeploymentInstanceType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeploymentInstanceType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableDeploymentInstanceType struct {
	value *DeploymentInstanceType
	isSet bool
}

func (v NullableDeploymentInstanceType) Get() *DeploymentInstanceType {
	return v.value
}

func (v *NullableDeploymentInstanceType) Set(val *DeploymentInstanceType) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentInstanceType) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentInstanceType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentInstanceType(val *DeploymentInstanceType) *NullableDeploymentInstanceType {
	return &NullableDeploymentInstanceType{value: val, isSet: true}
}

func (v NullableDeploymentInstanceType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentInstanceType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


