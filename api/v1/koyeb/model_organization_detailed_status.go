/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
	"fmt"
)

// OrganizationDetailedStatus the model 'OrganizationDetailedStatus'
type OrganizationDetailedStatus string

// List of OrganizationDetailedStatus
const (
	ORGANIZATIONDETAILEDSTATUS_NEW OrganizationDetailedStatus = "NEW"
	ORGANIZATIONDETAILEDSTATUS_EMAIL_NOT_VALIDATED OrganizationDetailedStatus = "EMAIL_NOT_VALIDATED"
	ORGANIZATIONDETAILEDSTATUS_BILLING_INFO_MISSING OrganizationDetailedStatus = "BILLING_INFO_MISSING"
	ORGANIZATIONDETAILEDSTATUS_LOCKED OrganizationDetailedStatus = "LOCKED"
	ORGANIZATIONDETAILEDSTATUS_PAYMENT_FAILURE OrganizationDetailedStatus = "PAYMENT_FAILURE"
	ORGANIZATIONDETAILEDSTATUS_VALID OrganizationDetailedStatus = "VALID"
	ORGANIZATIONDETAILEDSTATUS_PENDING_VERIFICATION OrganizationDetailedStatus = "PENDING_VERIFICATION"
	ORGANIZATIONDETAILEDSTATUS_VERIFICATION_FAILED OrganizationDetailedStatus = "VERIFICATION_FAILED"
	ORGANIZATIONDETAILEDSTATUS_REVIEWING_ACCOUNT OrganizationDetailedStatus = "REVIEWING_ACCOUNT"
	ORGANIZATIONDETAILEDSTATUS_PLAN_UPGRADE_REQUIRED OrganizationDetailedStatus = "PLAN_UPGRADE_REQUIRED"
)

// All allowed values of OrganizationDetailedStatus enum
var AllowedOrganizationDetailedStatusEnumValues = []OrganizationDetailedStatus{
	"NEW",
	"EMAIL_NOT_VALIDATED",
	"BILLING_INFO_MISSING",
	"LOCKED",
	"PAYMENT_FAILURE",
	"VALID",
	"PENDING_VERIFICATION",
	"VERIFICATION_FAILED",
	"REVIEWING_ACCOUNT",
	"PLAN_UPGRADE_REQUIRED",
}

func (v *OrganizationDetailedStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrganizationDetailedStatus(value)
	for _, existing := range AllowedOrganizationDetailedStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrganizationDetailedStatus", value)
}

// NewOrganizationDetailedStatusFromValue returns a pointer to a valid OrganizationDetailedStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrganizationDetailedStatusFromValue(v string) (*OrganizationDetailedStatus, error) {
	ev := OrganizationDetailedStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrganizationDetailedStatus: valid values are %v", v, AllowedOrganizationDetailedStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrganizationDetailedStatus) IsValid() bool {
	for _, existing := range AllowedOrganizationDetailedStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrganizationDetailedStatus value
func (v OrganizationDetailedStatus) Ptr() *OrganizationDetailedStatus {
	return &v
}

type NullableOrganizationDetailedStatus struct {
	value *OrganizationDetailedStatus
	isSet bool
}

func (v NullableOrganizationDetailedStatus) Get() *OrganizationDetailedStatus {
	return v.value
}

func (v *NullableOrganizationDetailedStatus) Set(val *OrganizationDetailedStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationDetailedStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationDetailedStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationDetailedStatus(val *OrganizationDetailedStatus) *NullableOrganizationDetailedStatus {
	return &NullableOrganizationDetailedStatus{value: val, isSet: true}
}

func (v NullableOrganizationDetailedStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationDetailedStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

