/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
	"time"
)

// QueryLogsReplyPagination struct for QueryLogsReplyPagination
type QueryLogsReplyPagination struct {
	HasMore *bool `json:"has_more,omitempty"`
	NextStart *time.Time `json:"next_start,omitempty"`
	NextEnd *time.Time `json:"next_end,omitempty"`
}

// NewQueryLogsReplyPagination instantiates a new QueryLogsReplyPagination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryLogsReplyPagination() *QueryLogsReplyPagination {
	this := QueryLogsReplyPagination{}
	return &this
}

// NewQueryLogsReplyPaginationWithDefaults instantiates a new QueryLogsReplyPagination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryLogsReplyPaginationWithDefaults() *QueryLogsReplyPagination {
	this := QueryLogsReplyPagination{}
	return &this
}

// GetHasMore returns the HasMore field value if set, zero value otherwise.
func (o *QueryLogsReplyPagination) GetHasMore() bool {
	if o == nil || isNil(o.HasMore) {
		var ret bool
		return ret
	}
	return *o.HasMore
}

// GetHasMoreOk returns a tuple with the HasMore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLogsReplyPagination) GetHasMoreOk() (*bool, bool) {
	if o == nil || isNil(o.HasMore) {
    return nil, false
	}
	return o.HasMore, true
}

// HasHasMore returns a boolean if a field has been set.
func (o *QueryLogsReplyPagination) HasHasMore() bool {
	if o != nil && !isNil(o.HasMore) {
		return true
	}

	return false
}

// SetHasMore gets a reference to the given bool and assigns it to the HasMore field.
func (o *QueryLogsReplyPagination) SetHasMore(v bool) {
	o.HasMore = &v
}

// GetNextStart returns the NextStart field value if set, zero value otherwise.
func (o *QueryLogsReplyPagination) GetNextStart() time.Time {
	if o == nil || isNil(o.NextStart) {
		var ret time.Time
		return ret
	}
	return *o.NextStart
}

// GetNextStartOk returns a tuple with the NextStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLogsReplyPagination) GetNextStartOk() (*time.Time, bool) {
	if o == nil || isNil(o.NextStart) {
    return nil, false
	}
	return o.NextStart, true
}

// HasNextStart returns a boolean if a field has been set.
func (o *QueryLogsReplyPagination) HasNextStart() bool {
	if o != nil && !isNil(o.NextStart) {
		return true
	}

	return false
}

// SetNextStart gets a reference to the given time.Time and assigns it to the NextStart field.
func (o *QueryLogsReplyPagination) SetNextStart(v time.Time) {
	o.NextStart = &v
}

// GetNextEnd returns the NextEnd field value if set, zero value otherwise.
func (o *QueryLogsReplyPagination) GetNextEnd() time.Time {
	if o == nil || isNil(o.NextEnd) {
		var ret time.Time
		return ret
	}
	return *o.NextEnd
}

// GetNextEndOk returns a tuple with the NextEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueryLogsReplyPagination) GetNextEndOk() (*time.Time, bool) {
	if o == nil || isNil(o.NextEnd) {
    return nil, false
	}
	return o.NextEnd, true
}

// HasNextEnd returns a boolean if a field has been set.
func (o *QueryLogsReplyPagination) HasNextEnd() bool {
	if o != nil && !isNil(o.NextEnd) {
		return true
	}

	return false
}

// SetNextEnd gets a reference to the given time.Time and assigns it to the NextEnd field.
func (o *QueryLogsReplyPagination) SetNextEnd(v time.Time) {
	o.NextEnd = &v
}

func (o QueryLogsReplyPagination) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HasMore) {
		toSerialize["has_more"] = o.HasMore
	}
	if !isNil(o.NextStart) {
		toSerialize["next_start"] = o.NextStart
	}
	if !isNil(o.NextEnd) {
		toSerialize["next_end"] = o.NextEnd
	}
	return json.Marshal(toSerialize)
}

type NullableQueryLogsReplyPagination struct {
	value *QueryLogsReplyPagination
	isSet bool
}

func (v NullableQueryLogsReplyPagination) Get() *QueryLogsReplyPagination {
	return v.value
}

func (v *NullableQueryLogsReplyPagination) Set(val *QueryLogsReplyPagination) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryLogsReplyPagination) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryLogsReplyPagination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryLogsReplyPagination(val *QueryLogsReplyPagination) *NullableQueryLogsReplyPagination {
	return &NullableQueryLogsReplyPagination{value: val, isSet: true}
}

func (v NullableQueryLogsReplyPagination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryLogsReplyPagination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


