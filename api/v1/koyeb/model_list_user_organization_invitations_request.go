/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// ListUserOrganizationInvitationsRequest struct for ListUserOrganizationInvitationsRequest
type ListUserOrganizationInvitationsRequest struct {
	Limit *string `json:"limit,omitempty"`
	Offset *string `json:"offset,omitempty"`
	Statuses *[]OrganizationInvitationStatus `json:"statuses,omitempty"`
}

// NewListUserOrganizationInvitationsRequest instantiates a new ListUserOrganizationInvitationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUserOrganizationInvitationsRequest() *ListUserOrganizationInvitationsRequest {
	this := ListUserOrganizationInvitationsRequest{}
	return &this
}

// NewListUserOrganizationInvitationsRequestWithDefaults instantiates a new ListUserOrganizationInvitationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUserOrganizationInvitationsRequestWithDefaults() *ListUserOrganizationInvitationsRequest {
	this := ListUserOrganizationInvitationsRequest{}
	return &this
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *ListUserOrganizationInvitationsRequest) GetLimit() string {
	if o == nil || o.Limit == nil {
		var ret string
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserOrganizationInvitationsRequest) GetLimitOk() (*string, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *ListUserOrganizationInvitationsRequest) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given string and assigns it to the Limit field.
func (o *ListUserOrganizationInvitationsRequest) SetLimit(v string) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *ListUserOrganizationInvitationsRequest) GetOffset() string {
	if o == nil || o.Offset == nil {
		var ret string
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserOrganizationInvitationsRequest) GetOffsetOk() (*string, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *ListUserOrganizationInvitationsRequest) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given string and assigns it to the Offset field.
func (o *ListUserOrganizationInvitationsRequest) SetOffset(v string) {
	o.Offset = &v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise.
func (o *ListUserOrganizationInvitationsRequest) GetStatuses() []OrganizationInvitationStatus {
	if o == nil || o.Statuses == nil {
		var ret []OrganizationInvitationStatus
		return ret
	}
	return *o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserOrganizationInvitationsRequest) GetStatusesOk() (*[]OrganizationInvitationStatus, bool) {
	if o == nil || o.Statuses == nil {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *ListUserOrganizationInvitationsRequest) HasStatuses() bool {
	if o != nil && o.Statuses != nil {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []OrganizationInvitationStatus and assigns it to the Statuses field.
func (o *ListUserOrganizationInvitationsRequest) SetStatuses(v []OrganizationInvitationStatus) {
	o.Statuses = &v
}

func (o ListUserOrganizationInvitationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Statuses != nil {
		toSerialize["statuses"] = o.Statuses
	}
	return json.Marshal(toSerialize)
}

type NullableListUserOrganizationInvitationsRequest struct {
	value *ListUserOrganizationInvitationsRequest
	isSet bool
}

func (v NullableListUserOrganizationInvitationsRequest) Get() *ListUserOrganizationInvitationsRequest {
	return v.value
}

func (v *NullableListUserOrganizationInvitationsRequest) Set(val *ListUserOrganizationInvitationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableListUserOrganizationInvitationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableListUserOrganizationInvitationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUserOrganizationInvitationsRequest(val *ListUserOrganizationInvitationsRequest) *NullableListUserOrganizationInvitationsRequest {
	return &NullableListUserOrganizationInvitationsRequest{value: val, isSet: true}
}

func (v NullableListUserOrganizationInvitationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUserOrganizationInvitationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


