/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GetIntercomProfileReply struct for GetIntercomProfileReply
type GetIntercomProfileReply struct {
	Hash *string `json:"hash,omitempty"`
}

// NewGetIntercomProfileReply instantiates a new GetIntercomProfileReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetIntercomProfileReply() *GetIntercomProfileReply {
	this := GetIntercomProfileReply{}
	return &this
}

// NewGetIntercomProfileReplyWithDefaults instantiates a new GetIntercomProfileReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetIntercomProfileReplyWithDefaults() *GetIntercomProfileReply {
	this := GetIntercomProfileReply{}
	return &this
}

// GetHash returns the Hash field value if set, zero value otherwise.
func (o *GetIntercomProfileReply) GetHash() string {
	if o == nil || isNil(o.Hash) {
		var ret string
		return ret
	}
	return *o.Hash
}

// GetHashOk returns a tuple with the Hash field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetIntercomProfileReply) GetHashOk() (*string, bool) {
	if o == nil || isNil(o.Hash) {
    return nil, false
	}
	return o.Hash, true
}

// HasHash returns a boolean if a field has been set.
func (o *GetIntercomProfileReply) HasHash() bool {
	if o != nil && !isNil(o.Hash) {
		return true
	}

	return false
}

// SetHash gets a reference to the given string and assigns it to the Hash field.
func (o *GetIntercomProfileReply) SetHash(v string) {
	o.Hash = &v
}

func (o GetIntercomProfileReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Hash) {
		toSerialize["hash"] = o.Hash
	}
	return json.Marshal(toSerialize)
}

type NullableGetIntercomProfileReply struct {
	value *GetIntercomProfileReply
	isSet bool
}

func (v NullableGetIntercomProfileReply) Get() *GetIntercomProfileReply {
	return v.value
}

func (v *NullableGetIntercomProfileReply) Set(val *GetIntercomProfileReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetIntercomProfileReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetIntercomProfileReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetIntercomProfileReply(val *GetIntercomProfileReply) *NullableGetIntercomProfileReply {
	return &NullableGetIntercomProfileReply{value: val, isSet: true}
}

func (v NullableGetIntercomProfileReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetIntercomProfileReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


