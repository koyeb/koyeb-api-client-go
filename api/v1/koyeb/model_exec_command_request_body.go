/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// checks if the ExecCommandRequestBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExecCommandRequestBody{}

// ExecCommandRequestBody struct for ExecCommandRequestBody
type ExecCommandRequestBody struct {
	// Command to exec. Mandatory in the first frame sent
	Command []string `json:"command,omitempty"`
	TtySize *ExecCommandRequestTerminalSize `json:"tty_size,omitempty"`
	Stdin *ExecCommandIO `json:"stdin,omitempty"`
}

// NewExecCommandRequestBody instantiates a new ExecCommandRequestBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExecCommandRequestBody() *ExecCommandRequestBody {
	this := ExecCommandRequestBody{}
	return &this
}

// NewExecCommandRequestBodyWithDefaults instantiates a new ExecCommandRequestBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExecCommandRequestBodyWithDefaults() *ExecCommandRequestBody {
	this := ExecCommandRequestBody{}
	return &this
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *ExecCommandRequestBody) GetCommand() []string {
	if o == nil || IsNil(o.Command) {
		var ret []string
		return ret
	}
	return o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecCommandRequestBody) GetCommandOk() ([]string, bool) {
	if o == nil || IsNil(o.Command) {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *ExecCommandRequestBody) HasCommand() bool {
	if o != nil && !IsNil(o.Command) {
		return true
	}

	return false
}

// SetCommand gets a reference to the given []string and assigns it to the Command field.
func (o *ExecCommandRequestBody) SetCommand(v []string) {
	o.Command = v
}

// GetTtySize returns the TtySize field value if set, zero value otherwise.
func (o *ExecCommandRequestBody) GetTtySize() ExecCommandRequestTerminalSize {
	if o == nil || IsNil(o.TtySize) {
		var ret ExecCommandRequestTerminalSize
		return ret
	}
	return *o.TtySize
}

// GetTtySizeOk returns a tuple with the TtySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecCommandRequestBody) GetTtySizeOk() (*ExecCommandRequestTerminalSize, bool) {
	if o == nil || IsNil(o.TtySize) {
		return nil, false
	}
	return o.TtySize, true
}

// HasTtySize returns a boolean if a field has been set.
func (o *ExecCommandRequestBody) HasTtySize() bool {
	if o != nil && !IsNil(o.TtySize) {
		return true
	}

	return false
}

// SetTtySize gets a reference to the given ExecCommandRequestTerminalSize and assigns it to the TtySize field.
func (o *ExecCommandRequestBody) SetTtySize(v ExecCommandRequestTerminalSize) {
	o.TtySize = &v
}

// GetStdin returns the Stdin field value if set, zero value otherwise.
func (o *ExecCommandRequestBody) GetStdin() ExecCommandIO {
	if o == nil || IsNil(o.Stdin) {
		var ret ExecCommandIO
		return ret
	}
	return *o.Stdin
}

// GetStdinOk returns a tuple with the Stdin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExecCommandRequestBody) GetStdinOk() (*ExecCommandIO, bool) {
	if o == nil || IsNil(o.Stdin) {
		return nil, false
	}
	return o.Stdin, true
}

// HasStdin returns a boolean if a field has been set.
func (o *ExecCommandRequestBody) HasStdin() bool {
	if o != nil && !IsNil(o.Stdin) {
		return true
	}

	return false
}

// SetStdin gets a reference to the given ExecCommandIO and assigns it to the Stdin field.
func (o *ExecCommandRequestBody) SetStdin(v ExecCommandIO) {
	o.Stdin = &v
}

func (o ExecCommandRequestBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExecCommandRequestBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Command) {
		toSerialize["command"] = o.Command
	}
	if !IsNil(o.TtySize) {
		toSerialize["tty_size"] = o.TtySize
	}
	if !IsNil(o.Stdin) {
		toSerialize["stdin"] = o.Stdin
	}
	return toSerialize, nil
}

type NullableExecCommandRequestBody struct {
	value *ExecCommandRequestBody
	isSet bool
}

func (v NullableExecCommandRequestBody) Get() *ExecCommandRequestBody {
	return v.value
}

func (v *NullableExecCommandRequestBody) Set(val *ExecCommandRequestBody) {
	v.value = val
	v.isSet = true
}

func (v NullableExecCommandRequestBody) IsSet() bool {
	return v.isSet
}

func (v *NullableExecCommandRequestBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExecCommandRequestBody(val *ExecCommandRequestBody) *NullableExecCommandRequestBody {
	return &NullableExecCommandRequestBody{value: val, isSet: true}
}

func (v NullableExecCommandRequestBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExecCommandRequestBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


