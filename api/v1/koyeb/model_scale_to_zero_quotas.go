/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// ScaleToZeroQuotas struct for ScaleToZeroQuotas
type ScaleToZeroQuotas struct {
	IsDeepSleepEnabled *bool `json:"is_deep_sleep_enabled,omitempty"`
	DeepSleepIdleDelayMin *int64 `json:"deep_sleep_idle_delay_min,omitempty"`
	DeepSleepIdleDelayMax *int64 `json:"deep_sleep_idle_delay_max,omitempty"`
	IsLightSleepEnabled *bool `json:"is_light_sleep_enabled,omitempty"`
	LightSleepIdleDelayMin *int64 `json:"light_sleep_idle_delay_min,omitempty"`
	LightSleepIdleDelayMax *int64 `json:"light_sleep_idle_delay_max,omitempty"`
}

// NewScaleToZeroQuotas instantiates a new ScaleToZeroQuotas object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScaleToZeroQuotas() *ScaleToZeroQuotas {
	this := ScaleToZeroQuotas{}
	return &this
}

// NewScaleToZeroQuotasWithDefaults instantiates a new ScaleToZeroQuotas object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScaleToZeroQuotasWithDefaults() *ScaleToZeroQuotas {
	this := ScaleToZeroQuotas{}
	return &this
}

// GetIsDeepSleepEnabled returns the IsDeepSleepEnabled field value if set, zero value otherwise.
func (o *ScaleToZeroQuotas) GetIsDeepSleepEnabled() bool {
	if o == nil || isNil(o.IsDeepSleepEnabled) {
		var ret bool
		return ret
	}
	return *o.IsDeepSleepEnabled
}

// GetIsDeepSleepEnabledOk returns a tuple with the IsDeepSleepEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleToZeroQuotas) GetIsDeepSleepEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.IsDeepSleepEnabled) {
    return nil, false
	}
	return o.IsDeepSleepEnabled, true
}

// HasIsDeepSleepEnabled returns a boolean if a field has been set.
func (o *ScaleToZeroQuotas) HasIsDeepSleepEnabled() bool {
	if o != nil && !isNil(o.IsDeepSleepEnabled) {
		return true
	}

	return false
}

// SetIsDeepSleepEnabled gets a reference to the given bool and assigns it to the IsDeepSleepEnabled field.
func (o *ScaleToZeroQuotas) SetIsDeepSleepEnabled(v bool) {
	o.IsDeepSleepEnabled = &v
}

// GetDeepSleepIdleDelayMin returns the DeepSleepIdleDelayMin field value if set, zero value otherwise.
func (o *ScaleToZeroQuotas) GetDeepSleepIdleDelayMin() int64 {
	if o == nil || isNil(o.DeepSleepIdleDelayMin) {
		var ret int64
		return ret
	}
	return *o.DeepSleepIdleDelayMin
}

// GetDeepSleepIdleDelayMinOk returns a tuple with the DeepSleepIdleDelayMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleToZeroQuotas) GetDeepSleepIdleDelayMinOk() (*int64, bool) {
	if o == nil || isNil(o.DeepSleepIdleDelayMin) {
    return nil, false
	}
	return o.DeepSleepIdleDelayMin, true
}

// HasDeepSleepIdleDelayMin returns a boolean if a field has been set.
func (o *ScaleToZeroQuotas) HasDeepSleepIdleDelayMin() bool {
	if o != nil && !isNil(o.DeepSleepIdleDelayMin) {
		return true
	}

	return false
}

// SetDeepSleepIdleDelayMin gets a reference to the given int64 and assigns it to the DeepSleepIdleDelayMin field.
func (o *ScaleToZeroQuotas) SetDeepSleepIdleDelayMin(v int64) {
	o.DeepSleepIdleDelayMin = &v
}

// GetDeepSleepIdleDelayMax returns the DeepSleepIdleDelayMax field value if set, zero value otherwise.
func (o *ScaleToZeroQuotas) GetDeepSleepIdleDelayMax() int64 {
	if o == nil || isNil(o.DeepSleepIdleDelayMax) {
		var ret int64
		return ret
	}
	return *o.DeepSleepIdleDelayMax
}

// GetDeepSleepIdleDelayMaxOk returns a tuple with the DeepSleepIdleDelayMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleToZeroQuotas) GetDeepSleepIdleDelayMaxOk() (*int64, bool) {
	if o == nil || isNil(o.DeepSleepIdleDelayMax) {
    return nil, false
	}
	return o.DeepSleepIdleDelayMax, true
}

// HasDeepSleepIdleDelayMax returns a boolean if a field has been set.
func (o *ScaleToZeroQuotas) HasDeepSleepIdleDelayMax() bool {
	if o != nil && !isNil(o.DeepSleepIdleDelayMax) {
		return true
	}

	return false
}

// SetDeepSleepIdleDelayMax gets a reference to the given int64 and assigns it to the DeepSleepIdleDelayMax field.
func (o *ScaleToZeroQuotas) SetDeepSleepIdleDelayMax(v int64) {
	o.DeepSleepIdleDelayMax = &v
}

// GetIsLightSleepEnabled returns the IsLightSleepEnabled field value if set, zero value otherwise.
func (o *ScaleToZeroQuotas) GetIsLightSleepEnabled() bool {
	if o == nil || isNil(o.IsLightSleepEnabled) {
		var ret bool
		return ret
	}
	return *o.IsLightSleepEnabled
}

// GetIsLightSleepEnabledOk returns a tuple with the IsLightSleepEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleToZeroQuotas) GetIsLightSleepEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.IsLightSleepEnabled) {
    return nil, false
	}
	return o.IsLightSleepEnabled, true
}

// HasIsLightSleepEnabled returns a boolean if a field has been set.
func (o *ScaleToZeroQuotas) HasIsLightSleepEnabled() bool {
	if o != nil && !isNil(o.IsLightSleepEnabled) {
		return true
	}

	return false
}

// SetIsLightSleepEnabled gets a reference to the given bool and assigns it to the IsLightSleepEnabled field.
func (o *ScaleToZeroQuotas) SetIsLightSleepEnabled(v bool) {
	o.IsLightSleepEnabled = &v
}

// GetLightSleepIdleDelayMin returns the LightSleepIdleDelayMin field value if set, zero value otherwise.
func (o *ScaleToZeroQuotas) GetLightSleepIdleDelayMin() int64 {
	if o == nil || isNil(o.LightSleepIdleDelayMin) {
		var ret int64
		return ret
	}
	return *o.LightSleepIdleDelayMin
}

// GetLightSleepIdleDelayMinOk returns a tuple with the LightSleepIdleDelayMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleToZeroQuotas) GetLightSleepIdleDelayMinOk() (*int64, bool) {
	if o == nil || isNil(o.LightSleepIdleDelayMin) {
    return nil, false
	}
	return o.LightSleepIdleDelayMin, true
}

// HasLightSleepIdleDelayMin returns a boolean if a field has been set.
func (o *ScaleToZeroQuotas) HasLightSleepIdleDelayMin() bool {
	if o != nil && !isNil(o.LightSleepIdleDelayMin) {
		return true
	}

	return false
}

// SetLightSleepIdleDelayMin gets a reference to the given int64 and assigns it to the LightSleepIdleDelayMin field.
func (o *ScaleToZeroQuotas) SetLightSleepIdleDelayMin(v int64) {
	o.LightSleepIdleDelayMin = &v
}

// GetLightSleepIdleDelayMax returns the LightSleepIdleDelayMax field value if set, zero value otherwise.
func (o *ScaleToZeroQuotas) GetLightSleepIdleDelayMax() int64 {
	if o == nil || isNil(o.LightSleepIdleDelayMax) {
		var ret int64
		return ret
	}
	return *o.LightSleepIdleDelayMax
}

// GetLightSleepIdleDelayMaxOk returns a tuple with the LightSleepIdleDelayMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScaleToZeroQuotas) GetLightSleepIdleDelayMaxOk() (*int64, bool) {
	if o == nil || isNil(o.LightSleepIdleDelayMax) {
    return nil, false
	}
	return o.LightSleepIdleDelayMax, true
}

// HasLightSleepIdleDelayMax returns a boolean if a field has been set.
func (o *ScaleToZeroQuotas) HasLightSleepIdleDelayMax() bool {
	if o != nil && !isNil(o.LightSleepIdleDelayMax) {
		return true
	}

	return false
}

// SetLightSleepIdleDelayMax gets a reference to the given int64 and assigns it to the LightSleepIdleDelayMax field.
func (o *ScaleToZeroQuotas) SetLightSleepIdleDelayMax(v int64) {
	o.LightSleepIdleDelayMax = &v
}

func (o ScaleToZeroQuotas) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IsDeepSleepEnabled) {
		toSerialize["is_deep_sleep_enabled"] = o.IsDeepSleepEnabled
	}
	if !isNil(o.DeepSleepIdleDelayMin) {
		toSerialize["deep_sleep_idle_delay_min"] = o.DeepSleepIdleDelayMin
	}
	if !isNil(o.DeepSleepIdleDelayMax) {
		toSerialize["deep_sleep_idle_delay_max"] = o.DeepSleepIdleDelayMax
	}
	if !isNil(o.IsLightSleepEnabled) {
		toSerialize["is_light_sleep_enabled"] = o.IsLightSleepEnabled
	}
	if !isNil(o.LightSleepIdleDelayMin) {
		toSerialize["light_sleep_idle_delay_min"] = o.LightSleepIdleDelayMin
	}
	if !isNil(o.LightSleepIdleDelayMax) {
		toSerialize["light_sleep_idle_delay_max"] = o.LightSleepIdleDelayMax
	}
	return json.Marshal(toSerialize)
}

type NullableScaleToZeroQuotas struct {
	value *ScaleToZeroQuotas
	isSet bool
}

func (v NullableScaleToZeroQuotas) Get() *ScaleToZeroQuotas {
	return v.value
}

func (v *NullableScaleToZeroQuotas) Set(val *ScaleToZeroQuotas) {
	v.value = val
	v.isSet = true
}

func (v NullableScaleToZeroQuotas) IsSet() bool {
	return v.isSet
}

func (v *NullableScaleToZeroQuotas) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScaleToZeroQuotas(val *ScaleToZeroQuotas) *NullableScaleToZeroQuotas {
	return &NullableScaleToZeroQuotas{value: val, isSet: true}
}

func (v NullableScaleToZeroQuotas) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScaleToZeroQuotas) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


