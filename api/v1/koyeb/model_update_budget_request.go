/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// UpdateBudgetRequest struct for UpdateBudgetRequest
type UpdateBudgetRequest struct {
	// In cents.
	Amount *string `json:"amount,omitempty"`
}

// NewUpdateBudgetRequest instantiates a new UpdateBudgetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBudgetRequest() *UpdateBudgetRequest {
	this := UpdateBudgetRequest{}
	return &this
}

// NewUpdateBudgetRequestWithDefaults instantiates a new UpdateBudgetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBudgetRequestWithDefaults() *UpdateBudgetRequest {
	this := UpdateBudgetRequest{}
	return &this
}

// GetAmount returns the Amount field value if set, zero value otherwise.
func (o *UpdateBudgetRequest) GetAmount() string {
	if o == nil || isNil(o.Amount) {
		var ret string
		return ret
	}
	return *o.Amount
}

// GetAmountOk returns a tuple with the Amount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBudgetRequest) GetAmountOk() (*string, bool) {
	if o == nil || isNil(o.Amount) {
    return nil, false
	}
	return o.Amount, true
}

// HasAmount returns a boolean if a field has been set.
func (o *UpdateBudgetRequest) HasAmount() bool {
	if o != nil && !isNil(o.Amount) {
		return true
	}

	return false
}

// SetAmount gets a reference to the given string and assigns it to the Amount field.
func (o *UpdateBudgetRequest) SetAmount(v string) {
	o.Amount = &v
}

func (o UpdateBudgetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Amount) {
		toSerialize["amount"] = o.Amount
	}
	return json.Marshal(toSerialize)
}

type NullableUpdateBudgetRequest struct {
	value *UpdateBudgetRequest
	isSet bool
}

func (v NullableUpdateBudgetRequest) Get() *UpdateBudgetRequest {
	return v.value
}

func (v *NullableUpdateBudgetRequest) Set(val *UpdateBudgetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBudgetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBudgetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBudgetRequest(val *UpdateBudgetRequest) *NullableUpdateBudgetRequest {
	return &NullableUpdateBudgetRequest{value: val, isSet: true}
}

func (v NullableUpdateBudgetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBudgetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


