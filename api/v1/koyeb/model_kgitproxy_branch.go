/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// KgitproxyBranch struct for KgitproxyBranch
type KgitproxyBranch struct {
	Id *string `json:"id,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	RepositoryId *string `json:"repository_id,omitempty"`
	Name *string `json:"name,omitempty"`
	IsDefault *bool `json:"is_default,omitempty"`
	IsProtected *bool `json:"is_protected,omitempty"`
	Provider *KgitproxyRepositoryProvider `json:"provider,omitempty"`
}

// NewKgitproxyBranch instantiates a new KgitproxyBranch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKgitproxyBranch() *KgitproxyBranch {
	this := KgitproxyBranch{}
	var provider KgitproxyRepositoryProvider = KGITPROXYREPOSITORYPROVIDER_INVALID_PROVIDER
	this.Provider = &provider
	return &this
}

// NewKgitproxyBranchWithDefaults instantiates a new KgitproxyBranch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKgitproxyBranchWithDefaults() *KgitproxyBranch {
	this := KgitproxyBranch{}
	var provider KgitproxyRepositoryProvider = KGITPROXYREPOSITORYPROVIDER_INVALID_PROVIDER
	this.Provider = &provider
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KgitproxyBranch) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KgitproxyBranch) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KgitproxyBranch) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KgitproxyBranch) SetId(v string) {
	o.Id = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *KgitproxyBranch) GetOrganizationId() string {
	if o == nil || o.OrganizationId == nil {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KgitproxyBranch) GetOrganizationIdOk() (*string, bool) {
	if o == nil || o.OrganizationId == nil {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *KgitproxyBranch) HasOrganizationId() bool {
	if o != nil && o.OrganizationId != nil {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *KgitproxyBranch) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetRepositoryId returns the RepositoryId field value if set, zero value otherwise.
func (o *KgitproxyBranch) GetRepositoryId() string {
	if o == nil || o.RepositoryId == nil {
		var ret string
		return ret
	}
	return *o.RepositoryId
}

// GetRepositoryIdOk returns a tuple with the RepositoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KgitproxyBranch) GetRepositoryIdOk() (*string, bool) {
	if o == nil || o.RepositoryId == nil {
		return nil, false
	}
	return o.RepositoryId, true
}

// HasRepositoryId returns a boolean if a field has been set.
func (o *KgitproxyBranch) HasRepositoryId() bool {
	if o != nil && o.RepositoryId != nil {
		return true
	}

	return false
}

// SetRepositoryId gets a reference to the given string and assigns it to the RepositoryId field.
func (o *KgitproxyBranch) SetRepositoryId(v string) {
	o.RepositoryId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *KgitproxyBranch) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KgitproxyBranch) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *KgitproxyBranch) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *KgitproxyBranch) SetName(v string) {
	o.Name = &v
}

// GetIsDefault returns the IsDefault field value if set, zero value otherwise.
func (o *KgitproxyBranch) GetIsDefault() bool {
	if o == nil || o.IsDefault == nil {
		var ret bool
		return ret
	}
	return *o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KgitproxyBranch) GetIsDefaultOk() (*bool, bool) {
	if o == nil || o.IsDefault == nil {
		return nil, false
	}
	return o.IsDefault, true
}

// HasIsDefault returns a boolean if a field has been set.
func (o *KgitproxyBranch) HasIsDefault() bool {
	if o != nil && o.IsDefault != nil {
		return true
	}

	return false
}

// SetIsDefault gets a reference to the given bool and assigns it to the IsDefault field.
func (o *KgitproxyBranch) SetIsDefault(v bool) {
	o.IsDefault = &v
}

// GetIsProtected returns the IsProtected field value if set, zero value otherwise.
func (o *KgitproxyBranch) GetIsProtected() bool {
	if o == nil || o.IsProtected == nil {
		var ret bool
		return ret
	}
	return *o.IsProtected
}

// GetIsProtectedOk returns a tuple with the IsProtected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KgitproxyBranch) GetIsProtectedOk() (*bool, bool) {
	if o == nil || o.IsProtected == nil {
		return nil, false
	}
	return o.IsProtected, true
}

// HasIsProtected returns a boolean if a field has been set.
func (o *KgitproxyBranch) HasIsProtected() bool {
	if o != nil && o.IsProtected != nil {
		return true
	}

	return false
}

// SetIsProtected gets a reference to the given bool and assigns it to the IsProtected field.
func (o *KgitproxyBranch) SetIsProtected(v bool) {
	o.IsProtected = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *KgitproxyBranch) GetProvider() KgitproxyRepositoryProvider {
	if o == nil || o.Provider == nil {
		var ret KgitproxyRepositoryProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KgitproxyBranch) GetProviderOk() (*KgitproxyRepositoryProvider, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *KgitproxyBranch) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given KgitproxyRepositoryProvider and assigns it to the Provider field.
func (o *KgitproxyBranch) SetProvider(v KgitproxyRepositoryProvider) {
	o.Provider = &v
}

func (o KgitproxyBranch) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.OrganizationId != nil {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if o.RepositoryId != nil {
		toSerialize["repository_id"] = o.RepositoryId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.IsDefault != nil {
		toSerialize["is_default"] = o.IsDefault
	}
	if o.IsProtected != nil {
		toSerialize["is_protected"] = o.IsProtected
	}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	return json.Marshal(toSerialize)
}

type NullableKgitproxyBranch struct {
	value *KgitproxyBranch
	isSet bool
}

func (v NullableKgitproxyBranch) Get() *KgitproxyBranch {
	return v.value
}

func (v *NullableKgitproxyBranch) Set(val *KgitproxyBranch) {
	v.value = val
	v.isSet = true
}

func (v NullableKgitproxyBranch) IsSet() bool {
	return v.isSet
}

func (v *NullableKgitproxyBranch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKgitproxyBranch(val *KgitproxyBranch) *NullableKgitproxyBranch {
	return &NullableKgitproxyBranch{value: val, isSet: true}
}

func (v NullableKgitproxyBranch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKgitproxyBranch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


