/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// RegionalDeploymentFileMount struct for RegionalDeploymentFileMount
type RegionalDeploymentFileMount struct {
	Path *string `json:"path,omitempty"`
	Permissions *string `json:"permissions,omitempty"`
	InterpolationEnabled *bool `json:"interpolation_enabled,omitempty"`
	Secret *RegionalDeploymentSecretSource `json:"secret,omitempty"`
	Raw *RegionalDeploymentRawSource `json:"raw,omitempty"`
}

// NewRegionalDeploymentFileMount instantiates a new RegionalDeploymentFileMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionalDeploymentFileMount() *RegionalDeploymentFileMount {
	this := RegionalDeploymentFileMount{}
	return &this
}

// NewRegionalDeploymentFileMountWithDefaults instantiates a new RegionalDeploymentFileMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionalDeploymentFileMountWithDefaults() *RegionalDeploymentFileMount {
	this := RegionalDeploymentFileMount{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *RegionalDeploymentFileMount) GetPath() string {
	if o == nil || isNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentFileMount) GetPathOk() (*string, bool) {
	if o == nil || isNil(o.Path) {
    return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *RegionalDeploymentFileMount) HasPath() bool {
	if o != nil && !isNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *RegionalDeploymentFileMount) SetPath(v string) {
	o.Path = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *RegionalDeploymentFileMount) GetPermissions() string {
	if o == nil || isNil(o.Permissions) {
		var ret string
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentFileMount) GetPermissionsOk() (*string, bool) {
	if o == nil || isNil(o.Permissions) {
    return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RegionalDeploymentFileMount) HasPermissions() bool {
	if o != nil && !isNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given string and assigns it to the Permissions field.
func (o *RegionalDeploymentFileMount) SetPermissions(v string) {
	o.Permissions = &v
}

// GetInterpolationEnabled returns the InterpolationEnabled field value if set, zero value otherwise.
func (o *RegionalDeploymentFileMount) GetInterpolationEnabled() bool {
	if o == nil || isNil(o.InterpolationEnabled) {
		var ret bool
		return ret
	}
	return *o.InterpolationEnabled
}

// GetInterpolationEnabledOk returns a tuple with the InterpolationEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentFileMount) GetInterpolationEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.InterpolationEnabled) {
    return nil, false
	}
	return o.InterpolationEnabled, true
}

// HasInterpolationEnabled returns a boolean if a field has been set.
func (o *RegionalDeploymentFileMount) HasInterpolationEnabled() bool {
	if o != nil && !isNil(o.InterpolationEnabled) {
		return true
	}

	return false
}

// SetInterpolationEnabled gets a reference to the given bool and assigns it to the InterpolationEnabled field.
func (o *RegionalDeploymentFileMount) SetInterpolationEnabled(v bool) {
	o.InterpolationEnabled = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *RegionalDeploymentFileMount) GetSecret() RegionalDeploymentSecretSource {
	if o == nil || isNil(o.Secret) {
		var ret RegionalDeploymentSecretSource
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentFileMount) GetSecretOk() (*RegionalDeploymentSecretSource, bool) {
	if o == nil || isNil(o.Secret) {
    return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *RegionalDeploymentFileMount) HasSecret() bool {
	if o != nil && !isNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given RegionalDeploymentSecretSource and assigns it to the Secret field.
func (o *RegionalDeploymentFileMount) SetSecret(v RegionalDeploymentSecretSource) {
	o.Secret = &v
}

// GetRaw returns the Raw field value if set, zero value otherwise.
func (o *RegionalDeploymentFileMount) GetRaw() RegionalDeploymentRawSource {
	if o == nil || isNil(o.Raw) {
		var ret RegionalDeploymentRawSource
		return ret
	}
	return *o.Raw
}

// GetRawOk returns a tuple with the Raw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionalDeploymentFileMount) GetRawOk() (*RegionalDeploymentRawSource, bool) {
	if o == nil || isNil(o.Raw) {
    return nil, false
	}
	return o.Raw, true
}

// HasRaw returns a boolean if a field has been set.
func (o *RegionalDeploymentFileMount) HasRaw() bool {
	if o != nil && !isNil(o.Raw) {
		return true
	}

	return false
}

// SetRaw gets a reference to the given RegionalDeploymentRawSource and assigns it to the Raw field.
func (o *RegionalDeploymentFileMount) SetRaw(v RegionalDeploymentRawSource) {
	o.Raw = &v
}

func (o RegionalDeploymentFileMount) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !isNil(o.Permissions) {
		toSerialize["permissions"] = o.Permissions
	}
	if !isNil(o.InterpolationEnabled) {
		toSerialize["interpolation_enabled"] = o.InterpolationEnabled
	}
	if !isNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !isNil(o.Raw) {
		toSerialize["raw"] = o.Raw
	}
	return json.Marshal(toSerialize)
}

type NullableRegionalDeploymentFileMount struct {
	value *RegionalDeploymentFileMount
	isSet bool
}

func (v NullableRegionalDeploymentFileMount) Get() *RegionalDeploymentFileMount {
	return v.value
}

func (v *NullableRegionalDeploymentFileMount) Set(val *RegionalDeploymentFileMount) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionalDeploymentFileMount) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionalDeploymentFileMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionalDeploymentFileMount(val *RegionalDeploymentFileMount) *NullableRegionalDeploymentFileMount {
	return &NullableRegionalDeploymentFileMount{value: val, isSet: true}
}

func (v NullableRegionalDeploymentFileMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionalDeploymentFileMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


