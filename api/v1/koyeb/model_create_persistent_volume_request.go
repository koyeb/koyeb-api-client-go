/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// CreatePersistentVolumeRequest struct for CreatePersistentVolumeRequest
type CreatePersistentVolumeRequest struct {
	VolumeType *PersistentVolumeBackingStore `json:"volume_type,omitempty"`
	Name *string `json:"name,omitempty"`
	Region *string `json:"region,omitempty"`
	ReadOnly *bool `json:"read_only,omitempty"`
	MaxSize *int64 `json:"max_size,omitempty"`
}

// NewCreatePersistentVolumeRequest instantiates a new CreatePersistentVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePersistentVolumeRequest() *CreatePersistentVolumeRequest {
	this := CreatePersistentVolumeRequest{}
	var volumeType PersistentVolumeBackingStore = PERSISTENTVOLUMEBACKINGSTORE_INVALID
	this.VolumeType = &volumeType
	return &this
}

// NewCreatePersistentVolumeRequestWithDefaults instantiates a new CreatePersistentVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePersistentVolumeRequestWithDefaults() *CreatePersistentVolumeRequest {
	this := CreatePersistentVolumeRequest{}
	var volumeType PersistentVolumeBackingStore = PERSISTENTVOLUMEBACKINGSTORE_INVALID
	this.VolumeType = &volumeType
	return &this
}

// GetVolumeType returns the VolumeType field value if set, zero value otherwise.
func (o *CreatePersistentVolumeRequest) GetVolumeType() PersistentVolumeBackingStore {
	if o == nil || isNil(o.VolumeType) {
		var ret PersistentVolumeBackingStore
		return ret
	}
	return *o.VolumeType
}

// GetVolumeTypeOk returns a tuple with the VolumeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePersistentVolumeRequest) GetVolumeTypeOk() (*PersistentVolumeBackingStore, bool) {
	if o == nil || isNil(o.VolumeType) {
    return nil, false
	}
	return o.VolumeType, true
}

// HasVolumeType returns a boolean if a field has been set.
func (o *CreatePersistentVolumeRequest) HasVolumeType() bool {
	if o != nil && !isNil(o.VolumeType) {
		return true
	}

	return false
}

// SetVolumeType gets a reference to the given PersistentVolumeBackingStore and assigns it to the VolumeType field.
func (o *CreatePersistentVolumeRequest) SetVolumeType(v PersistentVolumeBackingStore) {
	o.VolumeType = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreatePersistentVolumeRequest) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePersistentVolumeRequest) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
    return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreatePersistentVolumeRequest) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreatePersistentVolumeRequest) SetName(v string) {
	o.Name = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CreatePersistentVolumeRequest) GetRegion() string {
	if o == nil || isNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePersistentVolumeRequest) GetRegionOk() (*string, bool) {
	if o == nil || isNil(o.Region) {
    return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CreatePersistentVolumeRequest) HasRegion() bool {
	if o != nil && !isNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *CreatePersistentVolumeRequest) SetRegion(v string) {
	o.Region = &v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *CreatePersistentVolumeRequest) GetReadOnly() bool {
	if o == nil || isNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePersistentVolumeRequest) GetReadOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.ReadOnly) {
    return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *CreatePersistentVolumeRequest) HasReadOnly() bool {
	if o != nil && !isNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *CreatePersistentVolumeRequest) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise.
func (o *CreatePersistentVolumeRequest) GetMaxSize() int64 {
	if o == nil || isNil(o.MaxSize) {
		var ret int64
		return ret
	}
	return *o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatePersistentVolumeRequest) GetMaxSizeOk() (*int64, bool) {
	if o == nil || isNil(o.MaxSize) {
    return nil, false
	}
	return o.MaxSize, true
}

// HasMaxSize returns a boolean if a field has been set.
func (o *CreatePersistentVolumeRequest) HasMaxSize() bool {
	if o != nil && !isNil(o.MaxSize) {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given int64 and assigns it to the MaxSize field.
func (o *CreatePersistentVolumeRequest) SetMaxSize(v int64) {
	o.MaxSize = &v
}

func (o CreatePersistentVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.VolumeType) {
		toSerialize["volume_type"] = o.VolumeType
	}
	if !isNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !isNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !isNil(o.ReadOnly) {
		toSerialize["read_only"] = o.ReadOnly
	}
	if !isNil(o.MaxSize) {
		toSerialize["max_size"] = o.MaxSize
	}
	return json.Marshal(toSerialize)
}

type NullableCreatePersistentVolumeRequest struct {
	value *CreatePersistentVolumeRequest
	isSet bool
}

func (v NullableCreatePersistentVolumeRequest) Get() *CreatePersistentVolumeRequest {
	return v.value
}

func (v *NullableCreatePersistentVolumeRequest) Set(val *CreatePersistentVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePersistentVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePersistentVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePersistentVolumeRequest(val *CreatePersistentVolumeRequest) *NullableCreatePersistentVolumeRequest {
	return &NullableCreatePersistentVolumeRequest{value: val, isSet: true}
}

func (v NullableCreatePersistentVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePersistentVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


